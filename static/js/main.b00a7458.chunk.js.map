{"version":3,"sources":["images/logo.png","images/shareIcon.svg","pages/Login.jsx","components/FilterMeal.jsx","components/Footer.jsx","components/Header.jsx","components/RecipeCard.jsx","pages/FoodsPage.jsx","components/RecomendationsCard.jsx","components/DetailPage.jsx","pages/FoodPage.jsx","pages/FoodInProgress.jsx","components/IngredientCardFood.jsx","pages/ExploreIngredientsFoods.jsx","pages/ExploreFoods.jsx","components/FilterDrink.jsx","pages/DrinksPage.jsx","components/DetailPageDrink.jsx","pages/DrinkPage.jsx","pages/DrinkInProgress.jsx","pages/ExploreDrinks.jsx","components/IngredientCardDrink.jsx","pages/ExploreIngredientsDrinks.jsx","pages/Explore.jsx","pages/ExploreAreaFood.jsx","pages/Perfil.jsx","components/RecipesDoneCard.jsx","pages/RecipesDone.jsx","components/FavoriteCard.jsx","pages/FavoritesRecipes.jsx","helpers/Switcher.jsx","context/GlobalProvider.jsx","App.js","serviceWorker.js","index.js","context/GlobalContext.js","components/SearchBar.jsx"],"names":["module","exports","containerStyles","makeStyles","container","display","flexDirection","justifyContent","alignItems","margin","width","height","boxSizing","form","title","fontFamily","logo","inputs","marginTop","Login","useState","email","saveEmail","password","savePassword","disable","setDisable","history","useHistory","styles","useEffect","docLogin","document","getElementById","checkValidity","length","Container","sx","background","className","src","alt","id","padding","TextField","pattern","onChange","target","value","data-testid","label","variant","required","minLength","type","Button","onClick","localStorage","setItem","undefined","JSON","stringify","cocktails","meals","push","color","disabled","button","endIcon","FilterMeal","useContext","GlobalContext","categoryMeals","setMeals","fetchRecipes","saveCate","setSaveCate","handleClick","category","a","fetch","response","json","marginBottom","ButtonGroup","size","flexWrap","maxWidth","map","index","key","strCategory","actions","icon","name","to","Footer","React","open","setOpen","position","bottom","right","Backdrop","SpeedDial","ariaLabel","onClose","onOpen","action","SpeedDialAction","tooltipTitle","tooltipOpen","Header","hasBtn","setShowBar","Box","AppBar","paddingLeft","paddingRight","fontSize","Typography","s","RecipeCard","str","Card","CardMedia","component","image","CardContent","FoodsPage","showBar","SearchBar","meal","idMeal","strMeal","strMealThumb","RecomendationsCard","img","ExpandMore","styled","props","expand","other","IconButton","transform","marginLeft","DetailPage","api","nameandMeasure","recomendations","url","isFavorite","setisFavorite","expanded","setExpanded","handleClose","event","reason","Fragment","aria-label","parse","getItem","favoriteRecipes","findFav","find","recipeId","console","log","CardHeader","avatar","Avatar","bgcolor","ingredient","CardActions","disableSpacing","window","navigator","clipboard","writeText","filtredFav","filter","favRecipe","fav","area","strArea","alcoholicOrNot","aria-expanded","Collapse","in","timeout","unmountOnExit","strInstructions","strYoutube","split","frameBorder","allowFullScreen","allow","drinks","recomendation","strDrink","strDrinkThumb","Snackbar","autoHideDuration","message","FoodPage","match","params","getLocal","progress","done","saveApi","setRecomendations","loading","setLoading","resolve","CircularProgress","ingredientandMeasures","measure","doneProgress","localProgress","saveLocal","zIndex","FoodInProgress","listIngredient","saveFavoriteMeal","check","setCheck","progressRecipes","reduce","acc","curr","checked","progressRecipe","FormGroup","FormControlLabel","control","Checkbox","Object","values","some","IngredientCardFood","strIngredient","ExploreIngredientsFoods","ingredients","setIngredients","gap","ExploreFoods","surprise","setSurprise","orientation","FilterDrink","setDrinks","categoryDrinks","DrinksPage","drink","idDrink","DetailPageDrink","subheader","strAlcoholic","DrinkPage","responseRec","resolveRec","DrinkInProgress","saveFavoriteDrink","ingredientName","ExploreDrinks","IngredientCardDrink","strIngredient1","ExploreIngredientsDrinks","Explore","alignSelf","ExploreAreaFood","Perfil","user","playerEmail","clear","RecipesDoneCard","recipe","shouldRenderMessage","setShouldRenderMessage","doneDate","tags","group","idRef","clipboardCopy","style","shareIcon","tag","indx","RecipesDone","setFilter","getStorage","favorite","rec","FavoriteCard","setUpdate","horizontalTopText","setStorage","ele","handleClickDisFav","FavoritesRecipes","shouldUpdate","setShouldUpdateFavorite","Switcher","exact","path","render","GlobalProvider","children","setDone","setprogress","stateEmail","setStateEmail","setCategoryMeals","setCategoryDrinks","filtredDrinks","setFiltredDrinks","filtredMeals","setFiltredMeals","filtredMealsByCategory","setFiltredMealsByCategory","filtredDrinksByCategory","setFiltredDrinksByCategory","param","resFilters","jsonFilters","Provider","doneLocal","ingredientsList","theme","createTheme","palette","secondary","main","light","dark","primary","default","App","ThemeProvider","basename","Boolean","location","hostname","ReactDOM","StrictMode","CssBaseline","serviceWorker","ready","then","registration","unregister","createContext","search","setSearch","option","setOption","pathname","trow","global","alert","requestSwitch","opt","pathName","defaultValue","row"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,uSCOrCC,EAAkBC,YAAW,CACjCC,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZC,OAAQ,OACRC,MAAO,MACPC,OAAQ,QACRC,UAAW,eAEbC,KAAM,CACJR,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBG,MAAO,OACPC,OAAQ,KAEVG,MAAO,CACLC,WAAY,oBAEdC,KAAM,CACJN,MAAO,KAETO,OAAQ,CACNP,MAAO,OACPQ,UAAW,MAmGAC,MA/Ff,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cACVC,EAAS3B,IAwBf,OArBA4B,qBAAU,WACR,IACMC,EAAWC,SAASC,eAAe,SACzCP,GAAYK,EAASG,iBAAmBX,EAASY,OAF9B,KAGlB,CAACd,EAAOE,IAkBT,kBAACa,EAAA,EAAD,CACEC,GAAK,CACHC,WAAY,8EAGd,yBAAKC,UAAYV,EAAOzB,WACtB,yBACEoC,IAAMxB,IACNyB,IAAI,cACJF,UAAYV,EAAOb,OAErB,wBAAIuB,UAAYV,EAAOf,OAAvB,eAGA,0BAAMyB,UAAYV,EAAOhB,KAAO6B,GAAG,SACjC,kBAACN,EAAA,EAAD,CACEC,GAAI,CAAEM,QAAS,EACbhC,OAAQ,IACRN,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAElB,kBAACqC,EAAA,EAAD,CACEF,GAAG,aAIHG,QAAQ,0CACRC,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAUyB,EAAOC,QAC5CC,cAAY,cACZC,MAAM,QACNC,QAAQ,WACRC,UAAQ,EACRb,UAAYV,EAAOZ,SAErB,kBAAC2B,EAAA,EAAD,CACEF,GAAG,gBACHW,UAAY,EACZP,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAAauB,EAAOC,QAC/CM,KAAK,WACLL,cAAY,iBACZC,MAAM,WACNC,QAAQ,WACRC,UAAQ,EACRb,UAAYV,EAAOZ,UAGvB,kBAACsC,EAAA,EAAD,CACEb,GAAG,YACHc,QAjEU,WAClBC,aAAaC,QAAQ,aAAc,KACnCD,aAAaC,QAAQ,iBAAkB,UACzBC,IAAVtC,GAAwC,IAAjBA,EAAMc,QAA0B,OAAVd,EAC/CoC,aAAaC,QAAQ,OAAQE,KAAKC,UAAU,CAAExC,MAAO,qBAErDoC,aAAaC,QAAQ,OAAQE,KAAKC,UAAU,CAAExC,WAEhDoC,aAAaC,QAAQ,cAAeE,KAAKC,UAAU,KACnDJ,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KACvDJ,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU,CAAEC,UAAW,GACpEC,MAAO,MACTpC,EAAQqC,KAAK,aAsDLf,cAAY,mBACZgB,MAAM,UACNd,QAAQ,YACRe,SAAWzC,EACXc,UAAYV,EAAOsC,OACnBC,QAAU,kBAAC,IAAD,OARZ,e,0CClDKC,MAxDf,WACE,MAAkDC,qBAAWC,KAArDC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aACjC,EAAgCtD,qBAAhC,mBAAOuD,EAAP,KAAiBC,EAAjB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACdJ,IAAaG,GAAyB,QAAbA,EADX,gBAEhBJ,EAAa,aACbE,EAAY,IAHI,uCAKOI,MAAM,wDAAD,OAAyDF,IALrE,cAKVG,EALU,iBAMGA,EAASC,OANZ,QAMVA,EANU,OAOhBT,EAASS,GACTN,EAAYE,GARI,4CAAH,sDAYjB,OACE,kBAAC1C,EAAA,EAAD,CACEC,GAAK,CACH8C,aAAc,EACdjE,UAAW,EACXb,QAAS,OACTE,eAAgB,WAElB,kBAAC6E,EAAA,EAAD,CACEC,KAAK,QACLlC,QAAQ,OACRd,GAAK,CACHhC,QAAS,OACTiF,SAAU,OACVC,SAAU,SAGXf,EAAcT,OAASS,EAAcT,MACnCyB,KAAI,SAACV,EAAUW,GAAX,OAAsBA,EAhCnB,GAiCN,kBAAClC,EAAA,EAAD,CACEmC,IAAMD,EACNxC,cAAA,UAAiB6B,EAASa,YAA1B,oBACAnC,QAAU,kBAAMqB,EAAYC,EAASa,eAEpCb,EAASa,gBAGhB,kBAACpC,EAAA,EAAD,CACED,KAAK,SACLL,cAAY,sBACZO,QAAU,kBAAMqB,EAAY,SAH9B,U,iGC5CFe,EAAU,CACd,CAAEC,KAAM,kBAAC,IAAD,MAAkBC,KAAM,SAAUC,GAAI,YAC9C,CAAEF,KAAM,kBAAC,IAAD,MAAiBC,KAAM,UAAWC,GAAI,aAC9C,CAAEF,KAAM,kBAAC,IAAD,MAAoBC,KAAM,QAASC,GAAI,aAiClCC,MA9Bf,WACE,MAAwBC,IAAM7E,UAAS,GAAvC,mBAAO8E,EAAP,KAAaC,EAAb,KACMxE,EAAUC,cAIhB,OACE,kBAACQ,EAAA,EAAD,CAAWC,GAAI,CAAE+D,SAAU,QAASC,OAAQ,GAAIC,OAAQ,MACtD,kBAACC,EAAA,EAAD,CAAUL,KAAMA,IAChB,kBAACM,EAAA,EAAD,CACEC,UAAU,4BACVZ,KAAM,kBAAC,IAAD,MACNa,QARc,kBAAMP,GAAQ,IAS5BQ,OAVa,kBAAMR,GAAQ,IAW3BD,KAAMA,GAELN,EAAQJ,KAAI,SAACoB,GAAD,OACT,kBAACC,EAAA,EAAD,CACEnB,IAAKkB,EAAOd,KACZD,KAAMe,EAAOf,KACbiB,aAAcF,EAAOd,KACrBiB,aAAW,EACXvD,QAAS,kBAjBAuC,EAiBkBa,EAAOb,GAjBlBpE,EAAQqC,KAAK+B,GAArB,IAACA,W,+DCmCRiB,MA9Cf,YAAgD,IAAD,IAA7BlG,aAA6B,MAArB,GAAqB,MAAjBmG,cAAiB,SACrCC,EAAe5C,qBAAWC,KAA1B2C,WACR,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEhB,SAAS,SACT/D,GAAK,CACHhC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZ6G,YAAa,EACbC,aAAc,IAGhB,kBAAC,IAAD,CAAMvB,GAAG,WACP,kBAAC,IAAD,CACE1D,GAAI,CACF4B,MAAO,OACPsD,SAAU,OAIhB,kBAACC,EAAA,EAAD,CAAYrE,QAAQ,MAAOrC,GAEzBmG,GAEI,kBAAC,IAAD,CACEzD,QAAU,kBAAM0D,GAAW,SAACO,GAAD,OAAQA,MACnCpF,GAAI,CACF4B,MAAO,OACPsD,SAAU,S,mCCFbG,MA3Bf,YAAmC,IAAblF,EAAY,EAAZA,IAAKmF,EAAO,EAAPA,IACzB,OACE,kBAACvF,EAAA,EAAD,CAAWC,GAAK,CACd8C,aAAc,IAGd,kBAACyC,EAAA,EAAD,CAAMvF,GAAI,CAAEkD,SAAU,SACpB,kBAACsC,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQvF,EACRC,IAAMkF,IAER,kBAACK,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAYrE,QAAQ,MAAOwE,OCetBM,OA5Bf,WACE,MAAyC3D,qBAAWC,KAA5CG,EAAR,EAAQA,aAAcX,EAAtB,EAAsBA,MAAOmE,EAA7B,EAA6BA,QAM7B,OAJApG,qBAAU,WACR4C,EAAa,eACZ,IAGD,oCACE,kBAAC,EAAD,CAAQ5D,MAAM,UACd,kBAAC,EAAD,MACCoH,GAAW,kBAACC,EAAA,EAAD,MAEVpE,EAAMA,OAASA,EAAMA,MAAMyB,KAAI,SAAC4C,EAAM3C,GAAP,OAAiBA,EAfrC,IAgBT,kBAAC,IAAD,CAAMM,GAAE,mBAAeqC,EAAKC,SAC1B,kBAAC,EAAD,CACE3C,IAAM0C,EAAKC,OACXV,IAAMS,EAAKE,QACX9F,IAAM4F,EAAKG,aACX7F,GAAK+C,QAIb,kBAAC,EAAD,Q,+PCfS+C,I,MAfY,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAK3H,EAAR,EAAQA,MAAO2E,EAAf,EAAeA,MAAf,OACzB,yBAAKlD,UAAU,oBAAoBU,cAAA,UAAiBwC,EAAjB,wBACjC,yBAAKjD,IAAMiG,EAAMhG,IAAM3B,IACvB,uBAAGmC,cAAA,UAAiBwC,EAAjB,yBACC3E,M,cCgBF4H,GAAaC,cAAO,SAACC,GACIA,EAArBC,OAAR,IAAmBC,EAAnB,aAA6BF,EAA7B,IACA,OAAO,kBAACG,GAAA,EAAeD,KAFNH,EAGhB,kBAAiB,CAClBK,UADC,EAAGH,OACkC,iBAAjB,eACrBI,WAAY,WAsLCC,OAnLf,YAAmE,IAA7CC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,IACzD,EAAoClI,oBAAS,GAA7C,mBAAOmI,EAAP,KAAmBC,EAAnB,KACA,EAAwBpI,oBAAS,GAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KACA,EAAgC/E,oBAAS,GAAzC,mBAAOqI,EAAP,KAAiBC,EAAjB,KACM/H,EAAUC,cAQV+H,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJ1D,GAAQ,IAGJS,EACJ,kBAAC,IAAMkD,SAAP,KACE,kBAACvG,EAAA,EAAD,CAAQU,MAAM,YAAYoB,KAAK,QAAQ7B,QAASmG,GAAhD,QAGA,kBAACZ,GAAA,EAAD,CACE1D,KAAK,QACL0E,aAAW,QACX9F,MAAM,UACNT,QAASmG,GAET,kBAAC,KAAD,CAAWpC,SAAS,YAKrB3D,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KAEzD,IAAMqG,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBAgCxD,OA9BAnI,qBAAU,WACR,GAAwB,OAApBoI,EAA0B,CAC5B,IAAMC,EAA8B,OAApBD,GACbA,EAAgBE,MAAK,SAACC,GAAD,OAAcA,EAAS3H,KAAOyG,EAAId,UAC1DiC,QAAQC,IAAIJ,GACRA,GAAWX,GAAc,MAE9B,IAwBD,kBAAC5B,EAAA,EAAD,CAAMvF,GAAI,CAAEkD,SAAU,MAAO9E,OAAQ,WACnC,kBAAC+J,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQrI,GAAI,CAAEsI,QAAS,WAAaZ,aAAW,UAC5CZ,EAAIb,QAAQ,IAGjB1B,OACE,kBAACmC,GAAA,EAAD,CACEgB,aAAW,WACXvG,QAAU,kBAAM7B,EAAQqC,KAAK,cAE7B,kBAAC,IAAD,OAGJlD,MAAK,oBAAeqI,EAAIxD,eAE1B,kBAACkC,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQoB,EAAIZ,aACZ9F,IAAM0G,EAAIb,UAEZ,kBAACN,EAAA,EAAD,KACE,wBAAI/E,cAAY,mBAAmBkG,EAAIb,SACvC,4BACGc,IACE5D,KAAI,SAACoF,EAAYnF,GAAb,OACH,wBACExC,cAAA,UAAiBwC,EAAjB,gCACAC,IAAMkF,GAELA,QAIX,kBAACC,GAAA,EAAD,CAAaC,gBAAc,GACzB,kBAAC/B,GAAA,EAAD,CAGEvF,QAAU,WACRuH,OAAOC,UAAUC,UAAUC,UAA3B,+BAA6D5B,IAC7DnD,GAAQ,KAGV,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CACEzF,KAAK,SACLE,QAvEa,WACnB,GAAK+F,EAYE,CACL,IAAM4B,EAAajB,EAChBkB,QAAO,SAACC,GAAD,OAAeA,EAAU3I,KAAOyG,EAAId,UAC9C5E,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUsH,IACvD3B,GAAc,OAhBC,CACf,IAAM8B,EAAG,uBAAOpB,GAAP,CAAwB,CAC/BxH,GAAIyG,EAAId,OACR/E,KAAM,SACNiI,KAAMpC,EAAIqC,QACV1G,SAAUqE,EAAIxD,YACd8F,eAAgB,GAChB3F,KAAMqD,EAAIb,QACVP,MAAOoB,EAAIZ,gBAEb9E,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUyH,IACvD9B,GAAc,MA6DRD,EAAa,kBAAC,KAAD,CAAUtF,MAAM,cAAgB,kBAAC,KAAD,OAEjD,kBAAC,GAAD,CACE4E,OAAQY,EACRjG,QAzHkB,WACxBkG,GAAaD,IAyHPiC,gBAAejC,EACfM,aAAW,aAEX,kBAAC,KAAD,QAGJ,kBAAC4B,GAAA,EAAD,CAAUC,GAAInC,EAAUoC,QAAQ,OAAOC,eAAa,GAClD,kBAAC9D,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAYvE,cAAY,gBAAgBkG,EAAI4C,iBAC5C,kBAAClE,EAAA,EAAD,CACEE,MAAK,wCAAoCoB,EAAI6C,WAAWC,MAAM,KAAK,IACnEtL,OAAO,MACPmH,UAAU,SACVoE,YAAY,IACZC,iBAAe,EACfC,MAAK,4GAKX,kBAACpE,EAAA,EAAD,KACE,yBAAKzF,UAAU,gBACZ8G,EAAegD,QAAUhD,EAAegD,OAAO7G,KAAI,SAAC8G,EAAe7G,GAAhB,OAClDA,EA9IiB,GA+If,kBAAC,GAAD,CACFC,IAAM4G,EAAcC,SACpB9D,IAAM6D,EAAcE,cACpB1L,MAAQwL,EAAcC,SACtB9G,MAAQA,SAKd,kBAACgH,GAAA,EAAD,CACEvG,KAAMA,EACNwG,iBAAkB,IAClBhG,QAASiD,EACTgD,QAAQ,cACR/F,OAAQA,MC/EDgG,OA5Gf,SAAkBhE,GAChB,IAA2BlG,EAAWkG,EAA9BiE,MAASC,OAAUpK,GACV4G,EAAUV,EAAnBiE,MAASvD,IACX3H,EAAUC,cAChB,EAAqC0C,qBAAWC,KAAxCwI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,KAC5B,EAAuB7L,mBAAS,IAAhC,mBAAO+H,EAAP,KAAY+D,EAAZ,KACA,EAA4C9L,mBAAS,IAArD,mBAAOiI,EAAP,KAAuB8D,EAAvB,KACA,EAA8B/L,oBAAS,GAAvC,mBAAOgM,EAAP,KAAgBC,EAAhB,KA4CA,OA1CAvL,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,wDAAD,OAAyDtC,IADtF,cACOuC,EADP,gBAEuBA,EAASC,OAFhC,OAEOoI,EAFP,OAGCJ,EAAQI,EAAQvJ,OAChBsJ,GAAW,GAJZ,0CAAD,KAMC,IAEHvL,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,6DAD9B,cACOC,EADP,gBAEuBA,EAASC,OAFhC,OAEOoI,EAFP,OAGCH,EAAkBG,GAClBP,EAASrK,EAAI,SAJd,0CAAD,KAMC,IA0BC0K,EACF,kBAAChL,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZU,UAAW,QAGb,kBAACqM,GAAA,EAAD,MACA,2CAKF,kBAACnL,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,SAChBG,MAAO,SAGT,kBAAC,GAAD,CACEyI,IAAMA,EAAI,GACVC,eAlDkB,WAGtB,IAFA,IAAMoE,EAAwB,GAErB/H,EAAQ,EAAGA,EADG,GACqBA,GAAS,EAAG,CACtD,IAAMkC,EAAG,uBAAmBlC,GACtBgI,EAAO,oBAAgBhI,GACT,KAAhB0D,EAAI,GAAGxB,IAA+B,OAAhBwB,EAAI,GAAGxB,IAC/B6F,EAAsBxJ,KAAtB,UAA8BmF,EAAI,GAAGxB,GAArC,cAA+CwB,EAAI,GAAGsE,KAG1D,OAAOD,GAyCHnE,eAAiBA,EACjBC,IAAMA,IAER,yBAAK/G,UAAY0K,EAAO,SAAW,WACjC,kBAAC1J,EAAA,EAAD,CACEC,QAAU,kBA3CA,WAChB,IAAMkK,EAAe9J,KAAKoG,MAAMvG,aAAawG,QAAQ,sBACrD,GAAqB,OAAjByD,EAAuB,CACzB,IAAMC,EAAa,6BAAQD,GAAR,IACjB3J,MAAM,6BACA2J,EAAa3J,OADd,mBACsBrB,EAAK,OAClCe,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU8J,IAE3DhM,EAAQqC,KAAR,mBAAyBtB,EAAzB,iBAmCsBkL,IAChBtK,KAAK,SACLH,QAAQ,YACRc,MAAO+I,EAAW,YAAc,UAChC5I,QAAS4I,EAAW,kBAAC,KAAD,MAAkB,kBAAC,KAAD,MACtC3K,GAAI,CACFnB,UAAW,EACXiE,aAAc,EACd0I,OAAQ,MAGRb,EACE,kBACA,iBAGR,kBAAC,EAAD,Q,yDClFDpJ,KAAKoG,MAAMvG,aAAawG,QAAQ,uBACnCxG,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU,CAAEC,UAAW,GACpEC,MAAO,MAENH,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KAyL1CiK,OAtLf,YAAwD,IAAXpL,EAAU,EAA7BmK,MAASC,OAAUpK,GAC3C,EACsC4B,qBAAWC,KADzCwJ,EAAR,EAAQA,eAAgBxE,EAAxB,EAAwBA,WACtByE,EADF,EACEA,iBAAkBxE,EADpB,EACoBA,cACpB,EAAuBpI,mBAAS,IAAhC,mBAAO+H,EAAP,KAAY+D,EAAZ,KACA,EAAwB9L,oBAAS,GAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KACA,EAA0B/E,mBAAS,IAAnC,mBAAO6M,EAAP,KAAcC,EAAd,KACMvM,EAAUC,cAEVsI,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBAElDkE,EAAkBvK,KAAKoG,MAAMvG,aAAawG,QAAQ,sBAExDnI,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,6DACCyE,GAAc,GADf,SAEwBxE,MAAM,wDAAD,OAAyDtC,IAFtF,cAEOuC,EAFP,gBAGuBA,EAASC,OAHhC,OAGOoI,EAHP,OAICJ,EAAQI,GAC4B,OAApBpD,GACbA,EAAgBE,MAAK,SAACC,GAAD,OAAcA,EAAS3H,KAAO4K,EAAQvJ,MAAM,GAAGsE,WACxDmB,GAAc,GAC7B0E,EAASH,EAAeT,EAAS,SAC9Bc,QAAO,SAACC,EAAKC,GAAN,oBAAC,gBAAoBD,GAArB,mBAA2BC,GAAO,MAAU,KACtD7K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU,CAAEC,UAAW,GACpEC,MAAM,gBAAIrB,EAAKuL,MAXlB,2CAAD,KAaC,CAACvL,IAEJ,IAAMiH,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJ1D,GAAQ,IAGJtB,EAAc,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACrBmL,EAAS,6BAAKD,GAAN,mBAAclL,EAAO+C,KAAO/C,EAAOwL,WAC3C,IAAMC,EAAc,6BAAQL,GAAR,IAClBpK,MAAM,6BACAoK,EAAgBpK,OADjB,mBAEDrB,EAAK,CAAC,6BACAuL,GADD,mBACSlL,EAAO+C,KAAO/C,EAAOwL,eACjB,OAApBJ,GAA4BpL,EAAOwL,SACrCjE,QAAQC,IAAI4D,GAEZ1K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU2K,KAEzD/K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU2K,KAIvD5H,EACJ,kBAAC,IAAMkD,SAAP,KACE,kBAACvG,EAAA,EAAD,CAAQU,MAAM,YAAYoB,KAAK,QAAQ7B,QAASmG,GAAhD,QAGA,kBAACZ,GAAA,EAAD,CACE1D,KAAK,QACL0E,aAAW,QACX9F,MAAM,UACNT,QAASmG,GAET,kBAAC,KAAD,CAAWpC,SAAS,YA6F1B,OACE,kCACkB5D,IAAdwF,EAAIpF,MAzFR,kBAAC6D,EAAA,EAAD,CAAMvF,GAAI,CAAEkD,SAAU,MAAO9E,OAAQ,WACnC,kBAAC+J,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQrI,GAAI,CAAEsI,QAAS,WAAaZ,aAAW,UAC5CZ,EAAIpF,MAAM,GAAGuE,QAAQ,IAG1B1B,OACE,kBAACmC,GAAA,EAAD,CACEgB,aAAW,WACXvG,QAAU,kBAAM7B,EAAQqC,KAAK,cAE7B,kBAAC,IAAD,OAGJlD,MAAK,oBAAeqI,EAAIpF,MAAM,GAAG4B,eAEnC,kBAACkC,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQoB,EAAIpF,MAAM,GAAGwE,aACrB9F,IAAM0G,EAAIpF,MAAM,GAAGuE,UAErB,kBAACN,EAAA,EAAD,KACE,wBAAI/E,cAAY,gBAAgBkG,EAAIpF,MAAM,GAAGuE,SAC7C,kBAACS,GAAA,EAAD,CAGEvF,QAAU,WACRuH,OAAOC,UAAUC,UAAUC,UAA3B,wCAAsE/B,EAAIpF,MAAM,GAAGsE,SACnFlC,GAAQ,KAGV,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CACEzF,KAAK,SACLE,QAAU,kBAAMwK,EAAiB7E,EAAIpF,MAAM,MAEzCwF,EAAa,kBAAC,KAAD,CAAUtF,MAAM,cAAgB,kBAAC,KAAD,OAEjD,kBAACwK,GAAA,EAAD,KACIV,EAAe5E,EAAK,SAAS3D,KAAI,SAACoF,GAAD,YAClBjH,IAAfiH,GACE,kBAAC8D,GAAA,EAAD,CACEnM,WAAkC,IAAtB0L,EAAMrD,IAAwB,iBAC1C+D,QACE,kBAACC,GAAA,EAAD,CACE9I,KAAO8E,EACPpH,QAAUqB,IAGd3B,MAAQ0H,EACRpH,QAAUqB,QAKlB,uBAAG5B,cAAY,gBACb,4CACCkG,EAAIpF,MAAM,GAAGgI,iBAEhB,kBAACxI,EAAA,EAAD,CACEJ,QAAQ,WACRc,MAAM,YACNG,QAAU,kBAAC,KAAD,MACVZ,QAAU,kBAAM7B,EAAQqC,KAAK,qBAC7BE,SACqB2K,OAAOC,OAAOb,GAC9Bc,MAAK,SAACnE,GAAD,OAA+B,IAAfA,MAP5B,kBAcF,kBAAC6B,GAAA,EAAD,CACEvG,KAAMA,EACNwG,iBAAkB,IAClBhG,QAASiD,EACTgD,QAAQ,cACR/F,OAAQA,IAEV,kBAAC,EAAD,OASI,kBAACxE,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZU,UAAW,QAGb,kBAACqM,GAAA,EAAD,MACA,6CC7KGyB,OA7Bf,YAAoD,IAAtBvJ,EAAqB,EAArBA,MAAOmF,EAAc,EAAdA,WACnC,OACE,kBAAChD,EAAA,EAAD,CACEvF,GAAI,CACFkD,SAAU,SAGZ,kBAACsC,EAAA,EAAD,CACEE,MAAK,uDAAmD6C,EAAWqE,cAA9D,QACLxM,IAAMmI,EAAWqE,cACjBnH,UAAU,MACVnH,OAAO,QAET,kBAACqH,EAAA,EAAD,KACE,wBACE/E,cAAA,UAAiBwC,EAAjB,eAEEmF,EAAWqE,kBC6BRC,OA5Cf,WACE,MAAsC9N,qBAAtC,mBAAO+N,EAAP,KAAoBC,EAApB,KAaA,OAVAtN,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,2DAD9B,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOA,EAFP,OAGCkK,EAAelK,GAHhB,0CAAD,KAKC,IAEHoF,QAAQC,IAAI4E,GAGV,6BACE,kBAAC,EAAD,CAAQrO,MAAM,sBAAsBmG,QAAS,IAC7C,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXb,QAAS,OACTC,cAAe,SACf+O,IAAK,IAGLF,GAAeA,EAAYpL,MAAMyB,KAAI,SAACoF,EAAYnF,GAAb,OACrCA,GAxBW,IAyBT,yBACExC,cAAA,UAAiBwC,EAAjB,qBAEA,kBAAC,GAAD,CACEC,IAAMD,EACNA,MAAQA,EACRmF,WAAaA,SAMvB,kBAAC,EAAD,QCeS0E,OAtDf,WACE,IAAM3N,EAAUC,cAChB,EAAgCR,mBAAS,IAAzC,mBAAOmO,EAAP,KAAiBC,EAAjB,KAUA,OARA1N,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,sDAD9B,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOA,EAFP,OAGCsK,EAAYtK,GAHb,0CAAD,KAKC,IAGD,6BACE,kBAAC,EAAD,CAAQpE,MAAM,gBAAgBmG,QAAS,IACvC,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXR,MAAO,OACPL,QAAS,OACTC,cAAe,WAGjB,kBAAC8E,EAAA,EAAD,CACEqK,YAAY,YAEZ,kBAAClM,EAAA,EAAD,CACEN,cAAY,wBACZK,KAAK,SACLE,QAAU,kBAAM7B,EAAQqC,KAAK,oCAH/B,kBAOA,kBAACT,EAAA,EAAD,CACEN,cAAY,mBACZK,KAAK,SACLE,QAAU,kBAAM7B,EAAQqC,KAAR,mBAAyBuL,EAASxL,MAAM,GAAGsE,WAH7D,gBAOA,kBAAC9E,EAAA,EAAD,CACEN,cAAY,kBACZK,KAAK,SACLE,QAAU,kBAAM7B,EAAQqC,KAAK,4BAH/B,wBASJ,kBAAC,EAAD,QCKS0L,OApDf,WACE,MAAoDpL,qBAAWC,KAAvDoL,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAAgBlL,EAAnC,EAAmCA,aACnC,EAAgCtD,qBAAhC,mBAAOuD,EAAP,KAAiBC,EAAjB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACdJ,IAAaG,GAAyB,QAAbA,EADX,gBAEhBJ,EAAa,iBACbE,EAAY,IAHI,uCAKOI,MAAM,4DAAD,OAA6DF,IALzE,cAKVG,EALU,iBAMGA,EAASC,OANZ,QAMVA,EANU,OAOhByK,EAAUzK,GACVN,EAAYE,GARI,4CAAH,sDAYjB,OACE,kBAAC1C,EAAA,EAAD,CACEC,GAAK,CACH8C,aAAc,EACdjE,UAAW,EACXb,QAAS,OACTE,eAAgB,WAElB,kBAAC6E,EAAA,EAAD,CACEC,KAAK,QACLlC,QAAQ,OACRd,GAAK,CACHhC,QAAS,OACTiF,SAAU,OACVC,SAAU,SAGXqK,EAAevD,QAAUuD,EAAevD,OACtC7G,KAAI,SAACV,EAAUW,GAAX,OAAsBA,EAhCnB,GAiCN,kBAAClC,EAAA,EAAD,CACEC,QAAU,kBAAMqB,EAAYC,EAASa,eAEpCb,EAASa,gBAGhB,kBAACpC,EAAA,EAAD,CACEC,QAAU,kBAAMqB,EAAY,SAD9B,UCNOgL,OAjCf,WACE,MAIIvL,qBAAWC,KAHbG,EADF,EACEA,aACA2H,EAFF,EAEEA,OACAnE,EAHF,EAGEA,QAOF,OAJApG,qBAAU,WACR4C,EAAa,mBACZ,IAGD,6BACE,kBAAC,EAAD,CAAQ5D,MAAM,WACd,kBAAC,GAAD,MACCoH,GAAW,kBAACC,EAAA,EAAD,MAEVkE,EAAOA,QAAUA,EAAOA,OACrB7G,KAAI,SAACsK,EAAOrK,GAAR,OAAkBA,EApBd,IAqBP,kBAAC,IAAD,CAAMM,GAAE,mBAAe+J,EAAMC,UAC3B,kBAAC,EAAD,CACErK,IAAMoK,EAAMC,QACZpI,IAAMmI,EAAMvD,SACZ/J,IAAMsN,EAAMtD,cACZ9J,GAAK+C,QAIf,kBAAC,EAAD,Q,cCfAiD,GAAaC,cAAO,SAACC,GACIA,EAArBC,OAAR,IAAmBC,EAAnB,aAA6BF,EAA7B,IACA,OAAO,kBAACG,GAAA,EAAeD,KAFNH,EAGhB,kBAAiB,CAClBK,UADC,EAAGH,OACkC,iBAAjB,eACrBI,WAAY,WA2KC+G,OAxKf,YAAwE,IAA7C7G,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,IAC9D,EAAoClI,oBAAS,GAA7C,mBAAOmI,EAAP,KAAmBC,EAAnB,KACA,EAAwBpI,oBAAS,GAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KACA,EAAgC/E,oBAAS,GAAzC,mBAAOqI,EAAP,KAAiBC,EAAjB,KACM/H,EAAUC,cAOV+H,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJ1D,GAAQ,IAGJS,EACJ,kBAAC,IAAMkD,SAAP,KACE,kBAACvG,EAAA,EAAD,CAAQU,MAAM,YAAYoB,KAAK,QAAQ7B,QAASmG,GAAhD,QAGA,kBAACZ,GAAA,EAAD,CACE1D,KAAK,QACL0E,aAAW,QACX9F,MAAM,UACNT,QAASmG,GAET,kBAAC,KAAD,CAAWpC,SAAS,YAMrB3D,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KAGzD,IAAMqG,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBA+BxD,OA9BAnI,qBAAU,WACR,GAAwB,OAApBoI,EAA0B,CAC5B,IAAMC,EAA8B,OAApBD,GACbA,EAAgBE,MAAK,SAACC,GAAD,OAAcA,EAAS3H,KAAOyG,EAAI4G,WAC1DzF,QAAQC,IAAIJ,GACRA,GAAWX,GAAc,MAE9B,IAwBD,kBAAC5B,EAAA,EAAD,CAAMvF,GAAI,CAAEkD,SAAU,MAAO9E,OAAQ,WACnC,kBAAC+J,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQrI,GAAI,CAAEsI,QAAS,WAAaZ,aAAW,UAC5CZ,EAAIoD,SAAS,IAGlB3F,OACE,kBAACmC,GAAA,EAAD,CACEgB,aAAW,WACXvG,QAAU,kBAAM7B,EAAQqC,KAAK,cAE7B,kBAAC,IAAD,OAGJlD,MAAK,oBAAeqI,EAAIxD,aACxBsK,UAAS,UAAK9G,EAAI+G,gBAEpB,kBAACrI,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQoB,EAAIqD,cACZ/J,IAAM0G,EAAIoD,WAEZ,kBAACvE,EAAA,EAAD,KACE,wBAAI/E,cAAY,gBAAgBkG,EAAIoD,UACpC,4BACGnD,IACE5D,KAAI,SAACoF,EAAYnF,GAAb,OACH,wBAAIxC,cAAA,UAAiBwC,EAAjB,gCAAuDC,IAAMkF,GAC9DA,QAIX,kBAACC,GAAA,EAAD,CAAaC,gBAAc,GACzB,kBAAC/B,GAAA,EAAD,CAGEvF,QAAU,WACRuH,OAAOC,UAAUC,UAAUC,UAA3B,+BAA6D5B,IAC7DnD,GAAQ,KAGV,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CACEzF,KAAK,SACLE,QArEa,WACnB,GAAK+F,EAYE,CACL,IAAM4B,EAAajB,EAChBkB,QAAO,SAACC,GAAD,OAAeA,EAAU3I,KAAOyG,EAAI4G,WAC9CtM,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUsH,IACvD3B,GAAc,OAhBC,CACf,IAAM8B,EAAG,uBAAOpB,GAAP,CAAwB,CAC/BxH,GAAIyG,EAAI4G,QACRzM,KAAM,SACNiI,KAAM,GACNzG,SAAUqE,EAAIxD,YACd8F,eAAgBtC,EAAI+G,aACpBpK,KAAMqD,EAAIoD,SACVxE,MAAOoB,EAAIqD,iBAEb/I,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUyH,IACvD9B,GAAc,MA2DRD,EAAa,kBAAC,KAAD,CAAUtF,MAAM,cAAgB,kBAAC,KAAD,OAEjD,kBAAC,GAAD,CACE4E,OAAQY,EACRjG,QAtHkB,WACxBkG,GAAaD,IAsHPiC,gBAAejC,EACfM,aAAW,aAEX,kBAAC,KAAD,QAGJ,kBAAC4B,GAAA,EAAD,CAAUC,GAAInC,EAAUoC,QAAQ,OAAOC,eAAa,GAClD,kBAAC9D,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAYvE,cAAY,gBAAgBkG,EAAI4C,mBAGhD,kBAAC/D,EAAA,EAAD,KACE,yBAAKzF,UAAU,gBACZ8G,EAAetF,OAASsF,EAAetF,MAAMyB,KAAI,SAAC8G,EAAe7G,GAAhB,OAChDA,EAvIiB,GAwIf,kBAAC,GAAD,CACFC,IAAM4G,EAAchE,QACpBG,IAAM6D,EAAc/D,aACpBzH,MAAQwL,EAAchE,QACtB7C,MAAQA,SAKd,kBAACgH,GAAA,EAAD,CACEvG,KAAMA,EACNwG,iBAAkB,IAClBhG,QAASiD,EACTgD,QAAQ,cACR/F,OAAQA,MClEDuJ,OA9Gf,SAAmBvH,GACjB,IAA2BlG,EAAWkG,EAA9BiE,MAASC,OAAUpK,GACV4G,EAAUV,EAAnBiE,MAASvD,IAEX3H,EAAUC,cAChB,EAAqC0C,qBAAWC,KAAxCwI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,KAC5B3C,QAAQC,IAAI,OAAQ0C,GACpB,MAAuB7L,mBAAS,IAAhC,mBAAO+H,EAAP,KAAY+D,EAAZ,KACA,EAA4C9L,mBAAS,IAArD,mBAAOiI,EAAP,KAAuB8D,EAAvB,KACA,EAA8B/L,oBAAS,GAAvC,mBAAOgM,EAAP,KAAgBC,EAAhB,KA4CA,OA1CAvL,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,4DAAD,OAA6DtC,IAD1F,cACOuC,EADP,gBAEuBA,EAASC,OAFhC,OAEOoI,EAFP,OAGCJ,EAAQI,EAAQjB,QAChBgB,GAAW,GAJZ,0CAAD,KAMC,IAEHvL,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEAC2BC,MAAM,yDADjC,cACOoL,EADP,gBAE0BA,EAAYlL,OAFtC,OAEOmL,EAFP,OAGClD,EAAkBkD,GAClBtD,EAASrK,EAAI,aAJd,0CAAD,KAMC,IA0BC0K,EACF,kBAAChL,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZU,UAAW,QAGb,kBAACqM,GAAA,EAAD,MACA,2CAKF,kBAACnL,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,SAChBG,MAAO,SAGT,kBAAC,GAAD,CACEyI,IAAMA,EAAI,GACVC,eAlDkB,WAGtB,IAFA,IAAMoE,EAAwB,GAErB/H,EAAQ,EAAGA,EADG,GACqBA,GAAS,EAAG,CACtD,IAAMkC,EAAG,uBAAmBlC,GACtBgI,EAAO,oBAAgBhI,QACT9B,IAAhBwF,EAAI,GAAGxB,IAAsC,OAAhBwB,EAAI,GAAGxB,IACtC6F,EAAsBxJ,KAAtB,UAA8BmF,EAAI,GAAGxB,GAArC,cAA+CwB,EAAI,GAAGsE,KAG1D,OAAOD,GAyCHnE,eAAiBA,EACjBC,IAAMA,IAER,yBAAK/G,UAAY0K,EAAO,SAAW,WACnC,kBAAC1J,EAAA,EAAD,CACIC,QAAU,kBA3CA,WAChB,IAAMkK,EAAe9J,KAAKoG,MAAMvG,aAAawG,QAAQ,sBACrD,GAAqB,OAAjByD,EAAuB,CACzB,IAAMC,EAAa,6BAAQD,GAAR,IACjB5J,UAAU,6BACJ4J,EAAa5J,WADV,mBACsBpB,EAAK,OACtCe,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU8J,IAE3DhM,EAAQqC,KAAR,mBAAyBtB,EAAzB,iBAmCsBkL,IAChBtK,KAAK,SACLH,QAAQ,YACRc,MAAO+I,EAAW,YAAc,UAChC5I,QAAS4I,EAAW,kBAAC,KAAD,MAAkB,kBAAC,KAAD,MACtC3K,GAAI,CACFnB,UAAW,EACXiE,aAAc,EACd0I,OAAQ,MAGRb,EACE,kBACA,iBAGR,kBAAC,EAAD,QCpFDpJ,KAAKoG,MAAMvG,aAAawG,QAAQ,uBACnCxG,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU,CAAEC,UAAW,GACpEC,MAAO,MAENH,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KA4L1CyM,OAzLf,YAAyD,IAAX5N,EAAU,EAA7BmK,MAASC,OAAUpK,GAC5C,EACoB4B,qBAAWC,KADvBwJ,EAAR,EAAQA,eAAgBxE,EAAxB,EAAwBA,WAAYgH,EAApC,EAAoCA,kBAClC/G,EADF,EACEA,cACF,EAAuBpI,mBAAS,IAAhC,mBAAO+H,EAAP,KAAY+D,EAAZ,KACA,EAAwB9L,oBAAS,GAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KACA,EAA0B/E,mBAAS,CACjCoP,eAAgB,GAChBjC,QAAS,KAFX,mBAAON,EAAP,KAAcC,EAAd,KAIMvM,EAAUC,cAEVsI,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBAElDkE,EAAkBvK,KAAKoG,MAAMvG,aAAawG,QAAQ,sBAExDnI,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,6DACCyE,GAAc,GADf,SAEwBxE,MAAM,4DAAD,OAA6DtC,IAF1F,cAEOuC,EAFP,gBAGuBA,EAASC,OAHhC,OAGOoI,EAHP,OAICJ,EAAQI,GAC4B,OAApBpD,GACbA,EAAgBE,MAAK,SAACC,GAAD,OAAcA,EAAS3H,KAAO4K,EAAQjB,OAAO,GAAG0D,YACzDvG,GAAc,GAC7B0E,EAASH,EAAeT,EAAS,UAC9Bc,QAAO,SAACC,EAAKC,GAAN,oBAAC,gBAAoBD,GAArB,mBAA2BC,GAAO,MAAU,KACtD7K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU,CAAEC,UAAW,GACpEC,MAAM,gBAAIrB,EAAKuL,MAXlB,2CAAD,KAaC,IAEH,IAAMtE,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJ1D,GAAQ,IAGJtB,EAAc,SAAC,GAAgB,IAAd9B,EAAa,EAAbA,OACrBmL,EAAS,6BAAKD,GAAN,mBAAclL,EAAO+C,KAAO/C,EAAOwL,WAC3C,IAAMC,EAAc,6BAAQL,GAAR,IAClBrK,UAAU,6BACJqK,EAAgBrK,WADb,mBAELpB,EAAK,CAAC,6BACAuL,GADD,mBACSlL,EAAO+C,KAAO/C,EAAOwL,eACjB,OAApBJ,GAA4BpL,EAAOwL,SACrCjE,QAAQC,IAAI4D,GAEZ1K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU2K,KAEzD/K,aAAaC,QAAQ,oBAAqBE,KAAKC,UAAU2K,KAIvD5H,EACJ,kBAAC,IAAMkD,SAAP,KACE,kBAACvG,EAAA,EAAD,CAAQU,MAAM,YAAYoB,KAAK,QAAQ7B,QAASmG,GAAhD,QAGA,kBAACZ,GAAA,EAAD,CACE1D,KAAK,QACL0E,aAAW,QACX9F,MAAM,UACNT,QAASmG,GAET,kBAAC,KAAD,CAAWpC,SAAS,YA6F1B,OACE,kCACmB5D,IAAfwF,EAAIkD,OAzFR,kBAACzE,EAAA,EAAD,CAAMvF,GAAI,CAAEkD,SAAU,MAAO9E,OAAQ,WACnC,kBAAC+J,GAAA,EAAD,CACEC,OACE,kBAACC,GAAA,EAAD,CAAQrI,GAAI,CAAEsI,QAAS,WAAaZ,aAAW,UAC5CZ,EAAIkD,OAAO,GAAGE,SAAS,IAG5B3F,OACE,kBAACmC,GAAA,EAAD,CACEgB,aAAW,WACXvG,QAAU,kBAAM7B,EAAQqC,KAAK,cAE7B,kBAAC,IAAD,OAGJlD,MAAK,oBAAeqI,EAAIkD,OAAO,GAAG1G,eAEpC,kBAACkC,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQoB,EAAIkD,OAAO,GAAGG,cACtB/J,IAAM0G,EAAIkD,OAAO,GAAGE,WAEtB,kBAACvE,EAAA,EAAD,KACE,wBAAI/E,cAAY,gBAAgBkG,EAAIkD,OAAO,GAAGE,UAC9C,kBAACxD,GAAA,EAAD,CAGEvF,QAAU,WACRuH,OAAOC,UAAUC,UAAUC,UAA3B,wCAAsE/B,EAAIkD,OAAO,GAAG0D,UACpF5J,GAAQ,KAGV,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CACEzF,KAAK,SACLE,QAAU,kBAAM+M,EAAkBpH,EAAIkD,OAAO,MAE3C9C,EAAa,kBAAC,KAAD,CAAUtF,MAAM,cAAgB,kBAAC,KAAD,OAEjD,kBAACwK,GAAA,EAAD,KACIV,EAAe5E,EAAK,UAAU3D,KAAI,SAACoF,GAAD,MACnB,KAAfA,GACE,kBAAC8D,GAAA,EAAD,CACEnM,WAAkC,IAAtB0L,EAAMrD,IAAwB,iBAC1C+D,QACE,kBAACC,GAAA,EAAD,CACE9I,KAAO8E,EACPpH,QAAUqB,IAGd3B,MAAQ0H,EACRpH,QAAUqB,QAKlB,uBAAG5B,cAAY,gBACb,4CACCkG,EAAIkD,OAAO,GAAGN,iBAEjB,kBAACxI,EAAA,EAAD,CACEJ,QAAQ,WACRc,MAAM,YACNG,QAAU,kBAAC,KAAD,MACVZ,QAAU,kBAAM7B,EAAQqC,KAAK,qBAC7BE,SACqB2K,OAAOC,OAAOb,GAC9Bc,MAAK,SAACnE,GAAD,OAA+B,IAAfA,MAP5B,kBAcF,kBAAC6B,GAAA,EAAD,CACEvG,KAAMA,EACNwG,iBAAkB,IAClBhG,QAASiD,EACTgD,QAAQ,cACR/F,OAAQA,IAEV,kBAAC,EAAD,OASM,kBAACxE,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZU,UAAW,QAGb,kBAACqM,GAAA,EAAD,MACA,6CC9JCkD,OA7Cf,WACE,IAAM9O,EAAUC,cAChB,EAAgCR,mBAAS,IAAzC,mBAAOmO,EAAP,KAAiBC,EAAjB,KAUA,OARA1N,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,0DAD9B,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOA,EAFP,OAGCsK,EAAYtK,GAHb,0CAAD,KAKC,IAGD,6BACE,kBAAC,EAAD,CAAQpE,MAAM,iBAAiBmG,QAAS,IACxC,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXR,MAAO,OACPL,QAAS,OACTC,cAAe,WAGjB,kBAAC8E,EAAA,EAAD,CAAaqK,YAAY,YACvB,kBAAClM,EAAA,EAAD,CACEN,cAAY,wBACZK,KAAK,SACLE,QAAU,kBAAM7B,EAAQqC,KAAK,oCAH/B,kBAOA,kBAACT,EAAA,EAAD,CACEN,cAAY,mBACZK,KAAK,SACLE,QAAU,kBAAM7B,EAAQqC,KAAR,mBAAyBuL,EAASlD,OAAO,GAAG0D,YAH9D,kBASJ,kBAAC,EAAD,QCbSW,OA7Bf,YAAqD,IAAtBjL,EAAqB,EAArBA,MAAOmF,EAAc,EAAdA,WACpC,OACE,kBAAChD,EAAA,EAAD,CACEvF,GAAI,CACFkD,SAAU,SAGZ,kBAACsC,EAAA,EAAD,CACEE,MAAK,2DAAuD6C,EAAW+F,eAAlE,QACLlO,IAAMmI,EAAW+F,eACjB7I,UAAU,MACVnH,OAAO,QAET,kBAACqH,EAAA,EAAD,KACE,wBACE/E,cAAA,UAAiBwC,EAAjB,eAEEmF,EAAW+F,mBCyBRC,OAxCf,WACE,MAAsCxP,qBAAtC,mBAAO+N,EAAP,KAAoBC,EAApB,KACA,EAA8BhO,oBAAS,GAAvC,mBAAOgM,EAAP,KAAgBC,EAAhB,KAYA,OATAvL,qBAAU,WACR,sBAAC,8BAAAiD,EAAA,sEACwBC,MAAM,+DAD9B,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOA,EAFP,OAGCkK,EAAelK,GACfmI,GAAW,GAJZ,0CAAD,KAMC,IAGD,6BACE,kBAAC,EAAD,CAAQvM,MAAM,sBAAsBmG,QAAS,IAC7C,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXb,QAAS,OACTC,cAAe,SACf+O,IAAK,KAGJjC,GAAW+B,EAAY9C,OAAO7G,KAAI,SAACoF,EAAYnF,GAAb,OACnCA,GAvBW,IAwBT,kBAAC,GAAD,CACEC,IAAMD,EACNA,MAAQA,EACRmF,WAAaA,QAKrB,kBAAC,EAAD,QCCSiG,OApCf,WACE,IAAMlP,EAAUC,cAEhB,OACE,6BACE,kBAAC,EAAD,CAAQd,MAAM,UAAUmG,QAAS,IACjC,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXR,MAAO,OACPL,QAAS,OACTC,cAAe,WAGjB,kBAAC8E,EAAA,EAAD,CACE/C,GAAI,CACFyO,UAAW,WAGb,kBAACvN,EAAA,EAAD,CACEC,QAAU,kBAAM7B,EAAQqC,KAAK,uBAD/B,iBAKA,kBAACT,EAAA,EAAD,CACEC,QAAU,kBAAM7B,EAAQqC,KAAK,uBAD/B,oBAOJ,kBAAC,EAAD,QCvBS+M,OAVf,WACE,OACE,6BACE,kBAAC,EAAD,CAAQjQ,MAAM,oBAEd,kBAAC,EAAD,QC4DSkQ,OA1Df,WACE,IAAMrP,EAAUC,cAOhBE,qBAAU,WACH2B,aAAawN,MAChBxN,aAAaC,QAAQ,OAAQE,KAAKC,UAAU,CAAExC,MAAO,uBAEtD,IAEH,IAAM6P,EAActN,KAAKoG,MAAMvG,aAAawG,QAAQ,SAEpD,OACE,oCACE,kBAAC,EAAD,CAAQnJ,MAAM,UAAUmG,QAAS,IACjC,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFhC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZU,UAAW,IAGb,kBAACsG,EAAA,EAAD,CAAYrE,QAAQ,KAAKF,cAAY,iBAArC,SAC0B,OAAhBiO,GAAwBA,EAAY7P,OAE9C,kBAAC+D,EAAA,EAAD,CACEqK,YAAY,WACZpN,GAAI,CACFnB,UAAW,IAGb,kBAACqC,EAAA,EAAD,CACEC,QAAU,kBAAM7B,EAAQqC,KAAK,sBAD/B,gBAKA,kBAACT,EAAA,EAAD,CACEC,QAAU,kBAAM7B,EAAQqC,KAAK,yBAD/B,oBAKA,kBAACT,EAAA,EAAD,CACEC,QA5CM,WACdC,aAAa0N,QACbxP,EAAQqC,KAAK,OAyCP,YAOJ,kBAAC,EAAD,Q,0CCoBSoN,OA9Ef,YAA6C,IAAlB3L,EAAiB,EAAjBA,MAAO4L,EAAU,EAAVA,OAChC,EAAsDjQ,oBAAS,GAA/D,mBAAOkQ,EAAP,KAA4BC,EAA5B,KAGE7O,EASE2O,EATF3O,GACAY,EAQE+N,EARF/N,KACAiI,EAOE8F,EAPF9F,KACAzG,EAMEuM,EANFvM,SACA2G,EAKE4F,EALF5F,eACA3F,EAIEuL,EAJFvL,KACAiC,EAGEsJ,EAHFtJ,MACAyJ,EAEEH,EAFFG,SACAC,EACEJ,EADFI,KAGI5M,EAAW,uCAAG,WAAO6M,EAAOC,GAAd,eAAA5M,EAAA,6DACZuE,EAAgB,WAAVoI,EAAA,mBAAiCC,GAAjC,mBAAuDA,GADjD,SAEZC,KAAc,wBAAD,OAAyBtI,IAF1B,OAGlBiI,GAAuB,GAHL,2CAAH,wDAMjB,OACE,6BACE,kBAAC,IAAD,CACExL,GAAc,WAATzC,EAAA,mBAAgCZ,GAAhC,mBAAmDA,IAExD,yBACEmP,MAAQ,CAAEnR,MAAO,SACjB8B,IAAMuF,EACNtF,IAAMqD,EACN7C,cAAA,UAAiBwC,EAAjB,wBAGJ,uBAAGxC,cAAA,UAAiBwC,EAAjB,yBACU,WAATnC,EAAA,UAAuBiI,EAAvB,cAAiCzG,GAAa2G,GAElD,kBAAC,IAAD,CACE1F,GAAc,WAATzC,EAAA,mBAAgCZ,GAAhC,mBAAmDA,IAExD,wBAAIO,cAAA,UAAiBwC,EAAjB,qBACAK,IAGN,uBAAG7C,cAAA,UAAiBwC,EAAjB,0BACC+L,GAEJ,4BACElO,KAAK,SACLE,QAAU,kBAAMqB,EAAYvB,EAAMZ,KAElC,yBACEO,cAAA,UAAiBwC,EAAjB,yBACAjD,IAAMsP,KACNrP,IAAI,gBAIG,WAATa,GAAqBmO,EAAKjM,KAAI,SAACuM,EAAKC,GAAN,OAC5B,uBACEtM,IAAMsM,EACN/O,cAAA,UAAiBwC,EAAjB,YAA0BsM,EAA1B,oBAEEA,MAKNT,GAAuB,kBClBhBW,OAlDf,WACE,MAA4B7Q,mBAAS,OAArC,mBAAOgK,EAAP,KAAe8G,EAAf,KAEMC,EAAa,WAEjB,OADgBvO,KAAKoG,MAAMvG,aAAawG,QAAQ,iBAIlD,OACE,6BACE,kBAAC,EAAD,CAAQnJ,MAAM,eAAemG,QAAS,IACtC,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXR,MAAO,OACPL,QAAS,OACTC,cAAe,WAGjB,kBAAC8E,EAAA,EAAD,CACE/C,GAAI,CACFyO,UAAW,WAGb,kBAACvN,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,YAD5B,QAKA,kBAAC3O,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,YAD5B,SAKA,kBAAC3O,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,SAD5B,SAOc,OAAjBC,KAAyBA,IACvB/G,QAAO,SAACgH,GAAD,MAA0B,QAAXhH,EAAmBgH,EAAWA,EAAS9O,OAAS8H,KACtE5F,KAAI,SAAC6M,EAAK5M,GAAN,OACH,kBAAC,GAAD,CAAiBC,IAAMD,EAAQA,MAAQA,EAAQ4L,OAASgB,SCuDnDC,OAhGf,YAAuD,IAA/B7M,EAA8B,EAA9BA,MAAO2M,EAAuB,EAAvBA,SAAUG,EAAa,EAAbA,UACvC,EAAwBnR,oBAAS,GAAjC,mBAAO8E,EAAP,KAAaC,EAAb,KACQ7C,EAA0D8O,EAA1D9O,KAAMiI,EAAoD6G,EAApD7G,KAAMzG,EAA8CsN,EAA9CtN,SAAU2G,EAAoC2G,EAApC3G,eAAgB3F,EAAoBsM,EAApBtM,KAAMiC,EAAcqK,EAAdrK,MAAOrF,EAAO0P,EAAP1P,GACrD8P,EAA6B,WAATlP,EAAA,UAAuBiI,EAAvB,cAAiCzG,GAAa2G,EAElE9B,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJ1D,GAAQ,IAGJS,EACJ,kBAAC,IAAMkD,SAAP,KACE,kBAACvG,EAAA,EAAD,CAAQU,MAAM,YAAYoB,KAAK,QAAQ7B,QAASmG,GAAhD,QAGA,kBAACZ,GAAA,EAAD,CACE1D,KAAK,QACL0E,aAAW,QACX9F,MAAM,UACNT,QAASmG,GAET,kBAAC,KAAD,CAAWpC,SAAS,YAY1B,OACE,kBAACK,EAAA,EAAD,CACEvF,GAAI,CACFnB,UAAW,IAGb,kBAAC,IAAD,CAAM6E,GAAc,WAATzC,EAAA,mBAAgCZ,GAAhC,mBAAmDA,IAC5D,kBAACmF,EAAA,EAAD,CACEC,UAAU,MACVnH,OAAO,MACPoH,MAAQA,EACRtF,IAAMqD,KAGV,kBAACkC,EAAA,EAAD,KACE,uBAAG/E,cAAA,UAAiBwC,EAAjB,yBACA+M,GAEH,kBAAC,IAAD,CAAMzM,GAAc,WAATzC,EAAA,mBAAgCZ,GAAhC,mBAAmDA,IAC5D,wBAAIO,cAAA,UAAiBwC,EAAjB,qBACDK,IAGL,kBAAC+E,GAAA,EAAD,KACE,kBAAC9B,GAAA,EAAD,CAGEvF,QAAU,WACRuH,OAAOC,UAAUC,UACdC,UADH,+BAC8C,WAAT5H,EAAA,mBAAgCZ,GAAhC,mBAAmDA,KACxFyD,GAAQ,KAGV,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CACEzF,KAAK,SACLE,QAAU,kBA5CM,SAACmO,GACzB,IACMc,EADc7O,KAAKoG,MAAMvG,aAAawG,QAAQ,oBACrBmB,QAAO,SAACsH,GAAD,OAASA,EAAIhQ,KAAOiP,KAC1DlO,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU4O,IACvDF,GAAU,SAAC9K,GAAD,OAAQA,KAwCMkL,CAAkBjQ,KAElC,kBAAC,KAAD,CAAUuB,MAAM,iBAItB,kBAACwI,GAAA,EAAD,CACEvG,KAAMA,EACNwG,iBAAkB,IAClBhG,QAASiD,EACTgD,QAAQ,cACR/F,OAAQA,MC3BDgM,OA3Df,WACE,MAAgDxR,oBAAS,GAAzD,mBAAOyR,EAAP,KAAqBC,EAArB,KACA,EAA4B1R,mBAAS,OAArC,mBAAOgK,EAAP,KAAe8G,EAAf,KAEApQ,qBAAU,cAAU,CAAC+Q,IAErB,IAAMV,EAAa,WAEjB,OADgBvO,KAAKoG,MAAMvG,aAAawG,QAAQ,qBAIlD,OACE,6BACE,kBAAC,EAAD,CAAQnJ,MAAM,mBAAmBmG,QAAS,IAC1C,kBAAC7E,EAAA,EAAD,CACEC,GAAI,CACFnB,UAAW,EACXR,MAAO,OACPL,QAAS,OACTC,cAAe,WAGjB,kBAAC8E,EAAA,EAAD,CACE/C,GAAI,CACFyO,UAAW,WAGb,kBAACvN,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,YAD5B,QAKA,kBAAC3O,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,YAD5B,SAKA,kBAAC3O,EAAA,EAAD,CACEC,QAAU,kBAAM0O,EAAU,SAD5B,QAMiB,OAAjBC,KAAyBA,IACxB/G,QAAO,SAACgH,GAAD,MAA0B,QAAXhH,EAAmBgH,EAAWA,EAAS9O,OAAS8H,KACtE5F,KAAI,SAAC4M,EAAU3M,GAAX,OACH,kBAAC,GAAD,CACE8M,UAAYO,EACZpN,IAAMD,EACNA,MAAQA,EACR2M,SAAWA,QAInB,kBAAC,EAAD,QCUSW,OAnDf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAInL,UAAY3G,IAClC,kBAAC,IAAD,CAAO6R,OAAK,EAACC,KAAK,WAAWnL,UAAYG,KACzC,kBAAC,IAAD,CACE+K,OAAK,EACLC,KAAK,eACLC,OAAS,gBAAGrG,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAUA,MAAQA,OAE5C,kBAAC,IAAD,CACEmG,OAAK,EACLC,KAAK,2BACLC,OAAS,gBAAGrG,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAgBA,MAAQA,OAElD,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,WAAWnL,UAAY+H,KACzC,kBAAC,IAAD,CACEmD,OAAK,EACLC,KAAK,eACLC,OAAS,gBAAGrG,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAWA,MAAQA,OAE7C,kBAAC,IAAD,CACEmG,OAAK,EACLC,KAAK,2BACLC,OAAS,gBAAGrG,EAAH,EAAGA,MAAH,OAAe,kBAAC,GAAD,CAAiBA,MAAQA,OAEnD,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,YAAYnL,UAAY+I,KAC1C,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,oBAAoBnL,UAAYwH,KAClD,kBAAC,IAAD,CACE0D,OAAK,EACLC,KAAK,iCACLnL,UAAYoH,KAEd,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,oBAAoBnL,UAAY2I,KAClD,kBAAC,IAAD,CACEuC,OAAK,EACLC,KAAK,iCACLnL,UAAY8I,KAEd,kBAAC,IAAD,CACEoC,OAAK,EACLC,KAAK,yBACLnL,UAAYiJ,KAEd,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,UAAUnL,UAAYkJ,KACxC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,mBAAmBnL,UAAYmK,KACjD,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,sBAAsBnL,UAAY8K,OC6F3CO,OA1Jf,YAAuC,IAAbC,EAAY,EAAZA,SACxB,EAAwBhS,oBAAS,GAAjC,mBAAO6L,EAAP,KAAaoG,EAAb,KACA,EAAgCjS,oBAAS,GAAzC,mBAAO4L,EAAP,KAAiBsG,EAAjB,KACA,EAAoClS,mBAAS,SAA7C,mBAAOmS,EAAP,KAAmBC,EAAnB,KACA,EAA4BpS,mBAAS,IAArC,mBAAOiL,EAAP,KAAesD,EAAf,KACA,EAA0CvO,mBAAS,IAAnD,mBAAOoD,EAAP,KAAsBiP,EAAtB,KACA,EAA4CrS,mBAAS,IAArD,mBAAOwO,EAAP,KAAuB8D,EAAvB,KACA,EAA0BtS,mBAAS,IAAnC,mBAAO2C,EAAP,KAAcU,EAAd,KACA,EAA0CrD,mBAAS,IAAnD,mBAAOuS,EAAP,KAAsBC,EAAtB,KACA,EAAwCxS,mBAAS,IAAjD,mBAAOyS,EAAP,KAAqBC,EAArB,KACA,EAA4D1S,mBAAS,IAArE,mBAAO2S,EAAP,KAA+BC,EAA/B,KACA,EAA8D5S,mBAAS,IAAvE,mBAAO6S,EAAP,KAAgCC,EAAhC,KACA,EAA8B9S,oBAAS,GAAvC,mBAAO8G,GAAP,KAAgBhB,GAAhB,KACA,GAAoC9F,oBAAS,GAA7C,qBAAOmI,GAAP,MAAmBC,GAAnB,MAEM9E,GAAY,uCAAG,WAAOyP,GAAP,qBAAApP,EAAA,sEACIC,MAAM,eAAD,OAAgBmP,EAAhB,qCADT,cACblP,EADa,gBAEMD,MAAM,eAAD,OAAgBmP,EAAhB,uCAFX,cAEbC,EAFa,gBAGAnP,EAASC,OAHT,cAGbA,EAHa,iBAIOkP,EAAWlP,OAJlB,QAIbmP,EAJa,OAKL,cAAVF,IACF1P,EAASS,GACTuO,EAAiBY,GACjBP,EAAgB5O,IAEJ,kBAAViP,IACFxE,EAAUzK,GACVwO,EAAkBW,GAClBT,EAAiB1O,IAbA,4CAAH,sDAmGlB,OACE,kBAACX,EAAA,EAAc+P,SAAf,CACEtR,MAAQ,CACNe,QACAsI,SACAuD,iBACApL,gBACAE,gBACAqI,SA1FW,SAACrK,EAAIY,GACpB+P,GAAQ,GACRC,GAAY,GACZ,IAAMiB,EAAY3Q,KAAKoG,MAAMvG,aAAawG,QAAQ,gBAC5CyD,EAAe9J,KAAKoG,MAAMvG,aAAawG,QAAQ,sBACnC,OAAdsK,IACeA,EAAUnK,MAAK,SAACC,GAAD,OAAcA,EAAS3H,KAAOA,MAC9C2Q,GAAQ,IAEL,OAAjB3F,SAEqB/J,KADiB,OAAjB+J,EAAwBA,EAAapK,GAAMZ,GAAM,OACpC4Q,GAAY,KAgF9CrG,OACAD,WACAuG,aACAC,gBACAI,mBACAE,kBACAH,gBACAE,eACAlE,YACAlL,WACAyD,WACAhB,cACA6M,yBACAC,4BACAE,6BACAD,0BACAlG,eA5FiB,SAAC5E,EAAK7F,GAC3B,IAAMkR,EAAkB,GAExB,QAAkB7Q,IAAdwF,EAAI7F,GACN,IAAK,IAAImC,EAAQ,EAAGA,EAFC,GAEuBA,GAAS,EAAG,CACtD,IAAMkC,EAAG,uBAAmBlC,GAEF,KAAtB0D,EAAI7F,GAAM,GAAGqE,IACQ,OAAtBwB,EAAI7F,GAAM,GAAGqE,SAAuChE,IAAtBwF,EAAI7F,GAAM,GAAGqE,IAC5C6M,EACGxQ,KAAKmF,EAAI7F,GAAM,GAAGqE,IAI3B,OAAO6M,GA+EHjL,cACAyE,iBA7EmB,SAAC7E,GACnBvF,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KAEzD,IAAMqG,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBACxD,GAAKV,GAYE,CACL,IAAM4B,EAAajB,EAChBkB,QAAO,SAACC,GAAD,OAAeA,EAAU3I,KAAOyG,EAAId,UAC9C5E,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUsH,IACvD3B,IAAc,OAhBC,CACf,IAAM8B,EAAG,uBAAOpB,GAAP,CAAwB,CAC/BxH,GAAIyG,EAAId,OACR/E,KAAM,SACNiI,KAAMpC,EAAIqC,QACV1G,SAAUqE,EAAIxD,YACd8F,eAAgB,GAChB3F,KAAMqD,EAAIb,QACVP,MAAOoB,EAAIZ,gBAEb9E,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUyH,IACvD9B,IAAc,KA8DZ+G,kBArDoB,SAACpH,GACpBvF,KAAKoG,MAAMvG,aAAawG,QAAQ,qBACnCxG,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAU,KAEzD,IAAMqG,EAAkBtG,KAAKoG,MAAMvG,aAAawG,QAAQ,oBACxD,GAAKV,GAYE,CACL,IAAM4B,EAAajB,EAChBkB,QAAO,SAACC,GAAD,OAAeA,EAAU3I,KAAOyG,EAAI4G,WAC9CtM,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUsH,IACvD3B,IAAc,OAhBC,CACf,IAAM8B,EAAG,uBAAOpB,GAAP,CAAwB,CAC/BxH,GAAIyG,EAAI4G,QACRzM,KAAM,SACNiI,KAAM,GACNzG,SAAUqE,EAAIxD,YACd8F,eAAgBtC,EAAI+G,aACpBpK,KAAMqD,EAAIoD,SACVxE,MAAOoB,EAAIqD,iBAEb/I,aAAaC,QAAQ,kBAAmBE,KAAKC,UAAUyH,IACvD9B,IAAc,KAsCZA,mBAEA4J,IC7IFqB,GAAQC,YAAY,CACxBC,QAAS,CACPC,UAAW,CACTC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,QAAS,CACPH,KAAM,UACNC,MAAO,UACPC,KAAM,WAERzS,WAAY,CACV2S,QAAS,cAgBAC,OAZf,WACE,OACE,kBAACC,EAAA,EAAD,CAAeV,MAAQA,IACrB,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAeW,SAAS,gBACtB,kBAAC,GAAD,UClBUC,QACW,cAA7BtK,OAAOuK,SAASC,UAEe,UAA7BxK,OAAOuK,SAASC,UAEhBxK,OAAOuK,SAASC,SAAS1I,MACvB,2D,cCXN2I,IAAStC,OACP,kBAAC,IAAMuC,WAAP,KACE,kBAACC,GAAA,EAAD,MACA,kBAAC,GAAD,OAEJ1T,SAASC,eAAe,SDuHlB,kBAAmB+I,WACrBA,UAAU2K,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCErInB,WAEMxR,EAAgByR,0BAEPzR,O,gLC6GA4D,IApGf,WACE,MAAgC7D,qBAAWC,KAAnCE,EAAR,EAAQA,SAAUkL,EAAlB,EAAkBA,UAClB,EAA4BvO,mBAAS,IAArC,mBAAO6U,EAAP,KAAeC,EAAf,KACA,EAA4B9U,mBAAS,IAArC,mBAAO+U,EAAP,KAAeC,EAAf,KACMzU,EAAUC,cAEIyU,EAAe1U,EAA3B2T,SAAYe,SAEdC,EAAO,SAACpR,EAAM5B,EAAM2P,EAAMvQ,GAC9B,GAAmB,OAAfwC,EAAK5B,GACP,OAAOiT,EAAOC,MACZ,uEAGsB,IAAtBtR,EAAK5B,GAAMnB,QAAgBR,EAAQqC,KAAR,UAAgBiP,EAAhB,YAAwB/N,EAAK5B,GAAM,GAAGZ,KACxD,aAATuQ,GAAuB/N,EAAK5B,GAAMnB,OAAS,GAAKsC,EAASS,GAChD,aAAT+N,GAAuB/N,EAAK5B,GAAMnB,OAAS,GAAKwN,EAAUzK,IAG1DuR,EAAa,uCAAG,WAAOxD,EAAMyD,EAAKlU,GAAlB,+BAAAuC,EAAA,sDACd4R,EAAoB,aAAT1D,EAAsB,YAAc,gBAC/C3P,EAAgB,aAAT2P,EAAsB,QAAU,SACvCvQ,EAAc,aAATuQ,EAAsB,SAAW,UAHxB,KAIZyD,EAJY,OAKf,eALe,OAWf,SAXe,QAiBf,kBAjBe,wCAMK1R,MAAM,eAAD,OAAgB2R,EAAhB,2CAA2DnU,IANrE,cAMZyC,EANY,iBAOCA,EAASC,OAPV,eAOZA,EAPY,OAQlBoR,EAAKpR,EAAM5B,EAAM2P,EAAMvQ,GARL,8CAYKsC,MAAM,eAAD,OAAgB2R,EAAhB,2CAA2DnU,IAZrE,eAYZyC,EAZY,iBAaCA,EAASC,OAbV,eAaZA,EAbY,OAclBoR,EAAKpR,EAAM5B,EAAM2P,EAAMvQ,GAdL,oCAkBdF,EAAIL,OAAS,GAAGoU,EAAOC,MAAM,iDAlBf,UAmBKxR,MAAM,eAAD,OAAgB2R,EAAhB,2CAA2DnU,IAnBrE,eAmBZyC,EAnBY,iBAoBCA,EAASC,OApBV,eAoBZA,EApBY,OAqBlBoR,EAAKpR,EAAM5B,EAAM2P,EAAMvQ,GArBL,qGAAH,0DA6BnB,OACE,kBAAC,IAAD,CAAWL,GAAK,CACd8C,aAAc,EACdI,SAAU,OACVlF,QAAS,OACTE,eAAgB,WAGhB,kBAAC,IAAD,CACEuH,UAAU,QAEV,kBAAC,IAAD,CACEiC,aAAW,SACX6M,aAAa,SACb9Q,KAAK,sBACL+Q,KAAG,GAEH,kBAAC,IAAD,CACE7T,MAAM,aACN2L,QAAU,kBAAC,IAAD,MACVzL,MAAM,aACNJ,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqT,EAAUrT,EAAOC,UAE9C,kBAAC,IAAD,CACEA,MAAM,OACN2L,QAAU,kBAAC,IAAD,MACVzL,MAAM,OACNJ,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqT,EAAUrT,EAAOC,UAE9C,kBAAC,IAAD,CACEA,MAAM,gBACN2L,QAAU,kBAAC,IAAD,MACVzL,MAAM,eACNJ,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqT,EAAUrT,EAAOC,WAGhD,kBAAC,IAAD,CACEA,MAAQiT,EACR9S,QAAQ,WACRD,MAAM,sCACNJ,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmT,EAAUnT,EAAOC,UAE9C,kBAAC,IAAD,CACEG,QAAQ,YACRK,QAAU,kBAAMiT,EAAcJ,EAAUF,EAAQF,KAFlD,e","file":"static/js/main.b00a7458.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0ad0955f.png\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Button, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport logo from '../images/logo.png';\r\n\r\nconst containerStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    margin: 'auto',\r\n    width: '80%',\r\n    height: '100vh',\r\n    boxSizing: 'content-box',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-evenly',\r\n    width: '100%',\r\n    height: 200,\r\n  },\r\n  title: {\r\n    fontFamily: 'Lobster, cursive',\r\n  },\r\n  logo: {\r\n    width: 200,\r\n  },\r\n  inputs: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nfunction Login() {\r\n  const [email, saveEmail] = useState('');\r\n  const [password, savePassword] = useState('');\r\n  const [disable, setDisable] = useState(true);\r\n  const history = useHistory();\r\n  const styles = containerStyles();\r\n\r\n\r\n  useEffect(() => {\r\n    const MIN_LENGTH = 7;\r\n    const docLogin = document.getElementById('login');\r\n    setDisable(!docLogin.checkValidity() || password.length < MIN_LENGTH);\r\n  }, [email, password]);\r\n\r\n  const handleclick = () => {\r\n    localStorage.setItem('mealsToken', '1');\r\n    localStorage.setItem('cocktailsToken', '1');\r\n    if (email === undefined || email.length === 0 || email === null) {\r\n      localStorage.setItem('user', JSON.stringify({ email: 'guest@email.com' }));\r\n    } else {\r\n      localStorage.setItem('user', JSON.stringify({ email }));\r\n    }\r\n    localStorage.setItem('doneRecipes', JSON.stringify([]));\r\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\r\n    localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails: {},\r\n      meals: {} }));\r\n    history.push('/comidas');\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      sx={ {\r\n        background: 'linear-gradient(357deg, rgba(255,241,213,1) 0%, rgba(196,252,255,1) 100%)',\r\n      } }\r\n    >\r\n      <div className={ styles.container }>\r\n        <img\r\n          src={ logo }\r\n          alt=\"Logo do App\"\r\n          className={ styles.logo }\r\n        />\r\n        <h1 className={ styles.title } >\r\n          Recipes App\r\n        </h1>\r\n        <form className={ styles.form } id=\"login\">\r\n          <Container\r\n            sx={{ padding: 0,\r\n              height: 150,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'space-around',\r\n            }}>\r\n            <TextField\r\n              id=\"emailInput\"\r\n              // Pattern from:\r\n              // https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_input_pattern3\r\n              // https://www.w3schools.com/tags/att_input_pattern.asp\r\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              onChange={ ({ target }) => saveEmail(target.value) }\r\n              data-testid=\"email-input\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              required\r\n              className={ styles.inputs }\r\n            />\r\n            <TextField\r\n              id=\"passwordInput\"\r\n              minLength={ 7 }\r\n              onChange={ ({ target }) => savePassword(target.value) }\r\n              type=\"password\"\r\n              data-testid=\"password-input\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              required\r\n              className={ styles.inputs }\r\n            />\r\n          </Container>\r\n          <Button\r\n            id=\"submitBtn\"\r\n            onClick={ handleclick }\r\n            data-testid=\"login-submit-btn\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={ disable }\r\n            className={ styles.button }\r\n            endIcon={ <ExitToAppIcon /> }\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext, useState } from 'react';\nimport {\n  ButtonGroup,\n  Button,\n  Container,\n} from '@material-ui/core';\nimport GlobalContext from '../context/GlobalContext';\n\nfunction FilterMeal() {\n  const { categoryMeals, setMeals, fetchRecipes } = useContext(GlobalContext);\n  const [saveCate, setSaveCate] = useState();\n  const MAX_MAP = 5;\n\n  const handleClick = async (category) => {\n    if (saveCate === category || category === 'All') {\n      fetchRecipes('themealdb');\n      setSaveCate('');\n    } else {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const json = await response.json();\n      setMeals(json);\n      setSaveCate(category);\n    }\n  };\n\n  return (\n    <Container \n      sx={ {\n        marginBottom: 2,\n        marginTop: 2,\n        display: 'flex',\n        justifyContent: 'center',\n    } }>\n      <ButtonGroup\n        size=\"small\"\n        variant=\"text\"\n        sx={ {\n          display: 'flex',\n          flexWrap: 'wrap',\n          maxWidth: '100%',\n        } }\n      >\n        {categoryMeals.meals && categoryMeals.meals\n          .map((category, index) => (index < MAX_MAP && (\n            <Button\n              key={ index }\n              data-testid={ `${category.strCategory}-category-filter` }\n              onClick={ () => handleClick(category.strCategory) }\n            >\n              {category.strCategory}\n            </Button>\n          )))}\n        <Button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => handleClick('All') }\n        >\n          All\n        </Button>\n      </ButtonGroup>\n    </Container>\n  );\n}\n\nexport default FilterMeal;\n\n{/* <FormControl sx={{ width: 200, marginTop: 10,  zIndex: '100' }}>\n<InputLabel id=\"demo-simple-select-helper-label\">Categorias</InputLabel>\n<Select\n  labelId=\"demo-simple-select-helper-label\"\n  id=\"demo-simple-select-helper\"\n  value={ saveCate }\n  label=\"Categorias\"\n>\n{categoryMeals.meals && categoryMeals.meals\n  .map((category, index) => (index < MAX_MAP && (\n    <MenuItem\n      key={ index }\n      data-testid={ `${category.strCategory}-category-filter` }\n      onClick={ () => handleClick(category.strCategory) }\n    >\n      {category.strCategory}\n    </MenuItem>\n  )))}\n  <MenuItem\n    type=\"button\"\n    data-testid=\"All-category-filter\"\n    onClick={ () => handleClick('All') }\n  >\n    All\n</MenuItem>\n</Select>\n</FormControl> */}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Container, SpeedDial, Backdrop, SpeedDialAction,  } from '@material-ui/core';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst actions = [\n  { icon: <LocalBarIcon />, name: 'Drinks', to: '/bebidas' },\n  { icon: <ExploreIcon />, name: 'Explore', to: '/explorar' },\n  { icon: <RestaurantIcon />, name: 'Meals', to: '/comidas' },\n];\n\nfunction Footer() {\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleClick = (to) => history.push(to);\n  return (\n    <Container sx={{ position: 'fixed', bottom: 10, right: -150 }}>\n      <Backdrop open={open} />\n      <SpeedDial\n        ariaLabel=\"SpeedDial tooltip example\"\n        icon={<MoreHorizIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n      >\n        {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              tooltipOpen\n              onClick={() => handleClick(action.to)}\n            />\n        ))}\n      </SpeedDial>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport P from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Box, AppBar, Typography } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Search from '@material-ui/icons/Search';\nimport GlobalContext from '../context/GlobalContext';\n\nfunction Header({ title = '', hasBtn = true }) {\n  const { setShowBar } = useContext(GlobalContext);\n  return (\n    <Box>\n      <AppBar\n        position=\"static\"\n        sx={ {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingLeft: 1,\n          paddingRight: 1,\n        } }\n      >\n        <Link to=\"/perfil\">\n          <AccountCircle\n            sx={{\n              color: '#FFF',\n              fontSize: 45,\n            }}\n          />\n        </Link>\n        <Typography variant=\"h5\">{ title }</Typography>\n        {\n          hasBtn\n          && (\n              <Search\n                onClick={ () => setShowBar((s) => !s) }\n                sx={{\n                  color: '#FFF',\n                  fontSize: 45,\n                }}\n              />\n          )\n        }\n      </AppBar>\n    </Box>\n  );\n}\n\nHeader.propTypes = {\n  title: P.string.isRequired,\n  hasBtn: P.bool.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport P from 'prop-types';\n\nfunction RecipeCard({ src, str }) {\n  return (\n    <Container sx={ {\n      marginBottom: 2,\n      } }\n    >\n      <Card sx={{ maxWidth: '100%' }}>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image={ src }\n          alt={ str }\n        />\n        <CardContent>\n          <Typography variant=\"h5\">{ str }</Typography>  \n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nRecipeCard.propTypes = {\n  str: P.objectOf(P.any).isRequired,\n  src: P.objectOf(P.any).isRequired,\n  id: P.number.isRequired,\n};\n\nexport default RecipeCard;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport FilterMeal from '../components/FilterMeal';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport GlobalContext from '../context/GlobalContext';\nimport RecipeCard from '../components/RecipeCard';\n\nconst MAX_NUMBER = 12;\n\nfunction FoodsPage() {\n  const { fetchRecipes, meals, showBar } = useContext(GlobalContext);\n\n  useEffect(() => {\n    fetchRecipes('themealdb');\n  }, []);\n\n  return (\n    <>\n      <Header title=\"Meals\" />\n      <FilterMeal />\n      {showBar && <SearchBar />}\n      {\n        meals.meals && meals.meals.map((meal, index) => index < MAX_NUMBER && (\n          <Link to={ `/comidas/${meal.idMeal}` }>\n            <RecipeCard\n              key={ meal.idMeal }\n              str={ meal.strMeal }\n              src={ meal.strMealThumb }\n              id={ index }\n            />\n          </Link>))\n      }\n      <Footer />\n    </>\n  );\n}\n\nexport default FoodsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/Recomendations.css';\n\nconst RecomendationsCard = ({ img, title, index }) => (\n  <div className=\"recomendationCard\" data-testid={ `${index}-recomendation-card` }>\n    <img src={ img } alt={ title } />\n    <p data-testid={ `${index}-recomendation-title` }>\n      { title }\n    </p>\n  </div>\n);\n\nRecomendationsCard.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default RecomendationsCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card,\n  CardHeader,\n  Avatar,\n  IconButton,\n  CardMedia,\n  Snackbar,\n  Button,\n  CardContent,\n  CardActions,\n  Collapse,\n  Typography,\n} from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport { useHistory } from 'react-router';\nimport RecomendationsCard from './RecomendationsCard';\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n}));\n\nfunction DetailPage({ api, nameandMeasure, recomendations, url }) {\n  const [isFavorite, setisFavorite] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const history = useHistory();\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const MAX_RECOMENDATIONS = 6;\n\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n  }\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  useEffect(() => {\n    if (favoriteRecipes !== null) {\n      const findFav = favoriteRecipes !== null\n      && favoriteRecipes.find((recipeId) => recipeId.id === api.idMeal);\n      console.log(findFav);\n      if (findFav) { setisFavorite(true); }\n    }\n  }, []);\n\n  const saveFavorite = () => {\n    if (!isFavorite) {\n      const fav = [...favoriteRecipes, {\n        id: api.idMeal,\n        type: 'comida',\n        area: api.strArea,\n        category: api.strCategory,\n        alcoholicOrNot: '',\n        name: api.strMeal,\n        image: api.strMealThumb,\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n      setisFavorite(true);\n    } else {\n      const filtredFav = favoriteRecipes\n        .filter((favRecipe) => favRecipe.id !== api.idMeal);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filtredFav));\n      setisFavorite(false);\n    }\n  };\n\n  return (\n    <Card sx={{ maxWidth: '90%', margin: '0 auto'}}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: '#428e92' }} aria-label=\"recipe\">\n            {api.strMeal[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={ () => history.push('/comidas')}\n          >\n            <RestaurantIcon/>\n          </IconButton>\n        }\n        title={`Category: ${api.strCategory}`}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={ api.strMealThumb }\n        alt={ api.strMeal }\n      />\n      <CardContent>\n        <h2 data-testid=\"recipe-category\">{api.strMeal}</h2>\n        <ul>\n          {nameandMeasure()\n            .map((ingredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ ingredient }\n              >\n                {ingredient}\n              </li>))}\n        </ul>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n          // Gary Vernon Grubb\n          onClick={ () => {\n            window.navigator.clipboard.writeText(`http://localhost:3000${url}`);\n            setOpen(true);\n          } }\n        >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          type=\"button\"\n          onClick={ saveFavorite }\n        >\n          { isFavorite ? <Favorite color=\"secondary\"/> : <FavoriteBorder /> }\n        </IconButton>\n        <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography data-testid=\"instructions\">{api.strInstructions}</Typography>\n          <CardMedia\n            image={ `https://www.youtube.com/embed/${api.strYoutube.split('=')[1]}` }\n            height=\"300\"\n            component=\"iframe\"\n            frameBorder=\"0\"\n            allowFullScreen\n            allow={ `accelerometer; autoplay; clipboard-write;\n            encrypted-media; gyroscope; picture-in-picture` }\n          />\n        </CardContent>\n      </Collapse>\n      <CardContent>\n        <div className=\"carousel-div\">\n          {recomendations.drinks && recomendations.drinks.map((recomendation, index) => (\n            index < MAX_RECOMENDATIONS\n          && (<RecomendationsCard\n            key={ recomendation.strDrink }\n            img={ recomendation.strDrinkThumb }\n            title={ recomendation.strDrink }\n            index={ index }\n          />)\n          ))}\n        </div>\n      </CardContent>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Link copied\"\n        action={action}\n      />\n    </Card>\n  );\n}\n\nDetailPage.propTypes = {\n  api: PropTypes.objectOf(PropTypes.string).isRequired,\n  nameandMeasure: PropTypes.objectOf(PropTypes.string).isRequired,\n  recomendations: PropTypes.objectOf(PropTypes.string).isRequired,\n  url: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default DetailPage;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Container, CircularProgress } from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport DetailPage from '../components/DetailPage';\nimport GlobalContext from '../context/GlobalContext';\nimport Footer from '../components/Footer';\nimport '../css/Recomendations.css';\n\nfunction FoodPage(props) {\n  const { match: { params: { id } } } = props;\n  const { match: { url } } = props;\n  const history = useHistory();\n  const { getLocal, progress, done } = useContext(GlobalContext);\n  const [api, saveApi] = useState({});\n  const [recomendations, setRecomendations] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const resolve = await response.json();\n      saveApi(resolve.meals);\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const resolve = await response.json();\n      setRecomendations(resolve);\n      getLocal(id, 'meals');\n    })();\n  }, []);\n\n  const nameandMeasures = () => {\n    const ingredientandMeasures = [];\n    const NUMBER_TWEENTY = 20;\n    for (let index = 1; index < NUMBER_TWEENTY; index += 1) {\n      const str = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      if (api[0][str] !== '' && api[0][str] !== null) {\n        ingredientandMeasures.push(`${api[0][str]} - ${api[0][measure]}`);\n      }\n    }\n    return ingredientandMeasures;\n  };\n\n  const saveLocal = () => {\n    const doneProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (doneProgress !== null) {\n      const localProgress = { ...doneProgress,\n        meals:\n         { ...doneProgress.meals, [id]: [] } };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(localProgress));\n    }\n    history.push(`/comidas/${id}/in-progress`);\n  };\n\n  if (loading) return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: '50%',\n      }}\n    >\n      <CircularProgress />\n      <h1>Loading...</h1>\n    </Container>\n) ;\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n      }}\n    >\n      <DetailPage\n        api={ api[0] }\n        nameandMeasure={ nameandMeasures }\n        recomendations={ recomendations }\n        url={ url }\n      />\n      <div className={ done ? 'hidden' : 'visible' }>\n        <Button\n          onClick={ () => saveLocal() }\n          type=\"button\"\n          variant=\"contained\"\n          color={progress ? \"secondary\" : \"primary\" }\n          endIcon={progress ? <RestoreIcon /> : <PlayCircleFilledIcon /> }\n          sx={{\n            marginTop: 2,\n            marginBottom: 2,\n            zIndex: 1000,\n          }}\n        >\n          { progress\n            ? 'continue recipe'\n            : 'Start Recipe' }\n        </Button>\n      </div>\n      <Footer />\n    </Container>\n  );\n}\n\nFoodPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default FoodPage;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardMedia,\n  CardHeader,\n  IconButton,\n  Avatar,\n  CardContent,\n  Button,\n  Snackbar,\n  FormGroup,\n  Checkbox,\n  FormControlLabel,\n  Container,\n  CircularProgress,\n} from '@material-ui/core';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport '../css/recipeProgress.css';\nimport GlobalContext from '../context/GlobalContext';\nimport Footer from '../components/Footer';\n\nif (!JSON.parse(localStorage.getItem('inProgressRecipes'))) {\n  localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails: {},\n    meals: {} }));\n}\nif (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n  localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n}\n\nfunction FoodInProgress({ match: { params: { id } } }) {\n  const { listIngredient, isFavorite,\n    saveFavoriteMeal, setisFavorite } = useContext(GlobalContext);\n  const [api, saveApi] = useState({});\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState([]);\n  const history = useHistory();\n\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const progressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  useEffect(() => {\n    (async () => {\n      setisFavorite(false);\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const resolve = await response.json();\n      saveApi(resolve);\n      const findFav = favoriteRecipes !== null\n      && favoriteRecipes.find((recipeId) => recipeId.id === resolve.meals[0].idMeal);\n      if (findFav) { setisFavorite(true); }\n      setCheck(listIngredient(resolve, 'meals')\n        .reduce((acc, curr) => ({ ...acc, [curr]: false }), {}));\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails: {},\n        meals: { [id]: check } }));\n    })();\n  }, [id]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = ({ target }) => {\n    setCheck({ ...check, [target.name]: target.checked });\n    const progressRecipe = { ...progressRecipes,\n      meals:\n       { ...progressRecipes.meals,\n         [id]: [\n           { ...check, [target.name]: target.checked }] } };\n    if (progressRecipes !== null && target.checked) {\n      console.log(progressRecipes);\n\n      localStorage.setItem('inProgressRecipes', JSON.stringify(progressRecipe));\n    } else {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(progressRecipe));\n    }\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  const foodProgress = () => (\n    <Card sx={{ maxWidth: '90%', margin: '0 auto'}}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: '#428e92' }} aria-label=\"recipe\">\n            {api.meals[0].strMeal[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={ () => history.push('/comidas')}\n          >\n            <RestaurantIcon/>\n          </IconButton>\n        }\n        title={`Category: ${api.meals[0].strCategory}`}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={ api.meals[0].strMealThumb }\n        alt={ api.meals[0].strMeal }\n      />\n      <CardContent>\n        <h2 data-testid=\"recipe-title\">{api.meals[0].strMeal}</h2>\n        <IconButton\n          // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n          // Gary Vernon Grubb\n          onClick={ () => {\n            window.navigator.clipboard.writeText(`http://localhost:3000/comidas/${api.meals[0].idMeal}`);\n            setOpen(true);\n          } }\n        >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          type=\"button\"\n          onClick={ () => saveFavoriteMeal(api.meals[0]) }\n        >\n          { isFavorite ? <Favorite color=\"secondary\"/> : <FavoriteBorder /> }\n        </IconButton>\n        <FormGroup>\n          { listIngredient(api, 'meals').map((ingredient) => (\n            ingredient !== undefined && (\n              <FormControlLabel\n                className={ check[ingredient] === true && 'recipeProgress' }\n                control={\n                  <Checkbox\n                    name={ ingredient }\n                    onClick={ handleClick }\n                  />\n                }\n                label={ ingredient }\n                onClick={ handleClick }\n              />\n            )\n          ))}\n        </FormGroup>\n        <p data-testid=\"instructions\">\n          <h3>Instructions</h3>\n          {api.meals[0].strInstructions}\n        </p>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          endIcon={ <DoneAllIcon />}\n          onClick={ () => history.push('/receitas-feitas') }\n          disabled={ (() => {\n            const checkvalue = Object.values(check)\n              .some((ingredient) => ingredient === false);\n            return checkvalue;\n          })() }\n        >\n          Finish Recipe\n        </Button>\n      </CardContent>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Link copied\"\n        action={action}\n      />\n      <Footer />\n    </Card>\n  );\n\n  return (\n    <div>\n      { api.meals !== undefined\n        ? foodProgress()\n        : (\n          <Container\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              marginTop: '50%',\n            }}\n          >\n            <CircularProgress />\n            <h1>Loading...</h1>\n          </Container>\n      ) \n      }\n    </div>\n  );\n}\n\nFoodInProgress.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default FoodInProgress;\n","import React from 'react';\nimport P from 'prop-types';\nimport { Card, CardContent, CardMedia } from '@material-ui/core';\n\nfunction IngredientCardFood({ index, ingredient }) {\n  return (\n    <Card\n      sx={{\n        maxWidth: '100%',\n      }}\n    >\n      <CardMedia\n        image={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}.png` }\n        alt={ ingredient.strIngredient }\n        component=\"img\"\n        height=\"140\"\n      />\n      <CardContent>\n        <h3\n          data-testid={ `${index}-card-name` }\n        >\n          { ingredient.strIngredient }\n        </h3>\n      </CardContent>\n    </Card>\n  );\n}\n\nIngredientCardFood.propTypes = {\n  index: P.number.isRequired,\n  ingredient: P.objectOf(P.any).isRequired,\n};\n\nexport default IngredientCardFood;\n","import React, { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCardFood from '../components/IngredientCardFood';\n\nfunction ExploreIngredientsFoods() {\n  const [ingredients, setIngredients] = useState();\n  const MAX_NUMBER = 11;\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      const json = await response.json();\n      setIngredients(json);\n    })();\n  }, []);\n\n  console.log(ingredients);\n\n  return (\n    <div>\n      <Header title=\"Explore Ingredients\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n        }}\n      >\n        { ingredients && ingredients.meals.map((ingredient, index) => (\n          index <= MAX_NUMBER && (\n            <div\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <IngredientCardFood\n                key={ index }\n                index={ index }\n                ingredient={ ingredient }\n              />\n            </div>\n          )\n        ))}\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreIngredientsFoods;\n","import React, { useState, useEffect } from 'react';\nimport { ButtonGroup, Container, Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction ExploreFoods() {\n  const history = useHistory();\n  const [surprise, setSurprise] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n      const json = await response.json();\n      setSurprise(json);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explore Meals\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ButtonGroup\n          orientation=\"vertical\"\n        >\n          <Button\n            data-testid=\"explore-by-ingredient\"\n            type=\"button\"\n            onClick={ () => history.push('/explorar/comidas/ingredientes') }\n          >\n            By ingredients\n          </Button>\n          <Button\n            data-testid=\"explore-surprise\"\n            type=\"button\"\n            onClick={ () => history.push(`/comidas/${surprise.meals[0].idMeal}`) }\n          >\n            Surprise me!\n          </Button>\n          <Button\n            data-testid=\"explore-by-area\"\n            type=\"button\"\n            onClick={ () => history.push('/explorar/comidas/area') }\n          >\n            By place of origin\n          </Button>\n        </ButtonGroup>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","import React, { useContext, useState } from 'react';\nimport {\n  ButtonGroup,\n  Button,\n  Container,\n} from '@material-ui/core';\nimport GlobalContext from '../context/GlobalContext';\n\nfunction FilterDrink() {\n  const { setDrinks, categoryDrinks, fetchRecipes } = useContext(GlobalContext);\n  const [saveCate, setSaveCate] = useState();\n  const MAX_MAP = 5;\n\n  const handleClick = async (category) => {\n    if (saveCate === category || category === 'All') {\n      fetchRecipes('thecocktaildb');\n      setSaveCate('');\n    } else {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n      const json = await response.json();\n      setDrinks(json);\n      setSaveCate(category);\n    }\n  };\n\n  return (\n    <Container \n      sx={ {\n        marginBottom: 2,\n        marginTop: 2,\n        display: 'flex',\n        justifyContent: 'center',\n    } }>\n      <ButtonGroup\n        size=\"small\"\n        variant=\"text\"\n        sx={ {\n          display: 'flex',\n          flexWrap: 'wrap',\n          maxWidth: '100%',\n        } }\n      >\n        {categoryDrinks.drinks && categoryDrinks.drinks\n          .map((category, index) => (index < MAX_MAP && (\n            <Button\n              onClick={ () => handleClick(category.strCategory) }\n            >\n              {category.strCategory}\n            </Button>\n          )))}\n        <Button\n          onClick={ () => handleClick('All') }\n        >\n          All\n        </Button>\n      </ButtonGroup>\n    </Container>\n  );\n}\n\nexport default FilterDrink;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GlobalContext from '../context/GlobalContext';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport RecipeCard from '../components/RecipeCard';\nimport FilterDrink from '../components/FilterDrink';\n\nconst MAX_NUMBER = 12;\n\nfunction DrinksPage() {\n  const {\n    fetchRecipes,\n    drinks,\n    showBar,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    fetchRecipes('thecocktaildb');\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Drinks\" />\n      <FilterDrink />\n      {showBar && <SearchBar />}\n      {\n        drinks.drinks && drinks.drinks\n          .map((drink, index) => index < MAX_NUMBER && (\n            <Link to={ `/bebidas/${drink.idDrink}` }>\n              <RecipeCard\n                key={ drink.idDrink }\n                str={ drink.strDrink }\n                src={ drink.strDrinkThumb }\n                id={ index }\n              />\n            </Link>))\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default DrinksPage;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card,\n  CardHeader,\n  Avatar,\n  IconButton,\n  CardMedia,\n  Snackbar,\n  Button,\n  CardContent,\n  CardActions,\n  Collapse,\n  Typography,\n} from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport { useHistory } from 'react-router';\nimport RecomendationsCard from './RecomendationsCard';\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n}));\n\nfunction DetailPageDrink({ api, nameandMeasure, recomendations, url }) {\n  const [isFavorite, setisFavorite] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const history = useHistory();\n  const MAX_RECOMENDATIONS = 6;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n\n  if (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n  }\n\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  useEffect(() => {\n    if (favoriteRecipes !== null) {\n      const findFav = favoriteRecipes !== null\n      && favoriteRecipes.find((recipeId) => recipeId.id === api.idDrink);\n      console.log(findFav);\n      if (findFav) { setisFavorite(true); }\n    }\n  }, []);\n\n  const saveFavorite = () => {\n    if (!isFavorite) {\n      const fav = [...favoriteRecipes, {\n        id: api.idDrink,\n        type: 'bebida',\n        area: '',\n        category: api.strCategory,\n        alcoholicOrNot: api.strAlcoholic,\n        name: api.strDrink,\n        image: api.strDrinkThumb,\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n      setisFavorite(true);\n    } else {\n      const filtredFav = favoriteRecipes\n        .filter((favRecipe) => favRecipe.id !== api.idDrink);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filtredFav));\n      setisFavorite(false);\n    }\n  };\n\n  return (\n    <Card sx={{ maxWidth: '90%', margin: '0 auto'}}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: '#428e92' }} aria-label=\"recipe\">\n            {api.strDrink[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={ () => history.push('/bebidas')}\n          >\n            <LocalBarIcon/>\n          </IconButton>\n        }\n        title={`Category: ${api.strCategory}`}\n        subheader={`${api.strAlcoholic}`}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={ api.strDrinkThumb }\n        alt={ api.strDrink }\n      />\n      <CardContent>\n        <h2 data-testid=\"recipe-title\">{api.strDrink}</h2> \n        <ul>\n          {nameandMeasure()\n            .map((ingredient, index) => (\n              <li data-testid={ `${index}-ingredient-name-and-measure` } key={ ingredient }>\n                {ingredient}\n              </li>))}\n        </ul>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n          // Gary Vernon Grubb\n          onClick={ () => {\n            window.navigator.clipboard.writeText(`http://localhost:3000${url}`);\n            setOpen(true);\n          } }\n        >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          type=\"button\"\n          onClick={ saveFavorite }\n        >\n          { isFavorite ? <Favorite color=\"secondary\"/> : <FavoriteBorder /> }\n        </IconButton>\n        <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography data-testid=\"instructions\">{api.strInstructions}</Typography>\n        </CardContent>\n      </Collapse>\n      <CardContent>\n        <div className=\"carousel-div\">\n          {recomendations.meals && recomendations.meals.map((recomendation, index) => (\n            index < MAX_RECOMENDATIONS\n          && (<RecomendationsCard\n            key={ recomendation.strMeal }\n            img={ recomendation.strMealThumb }\n            title={ recomendation.strMeal }\n            index={ index }\n          />)\n          ))}\n        </div>\n      </CardContent>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Link copied\"\n        action={action}\n      />\n    </Card>\n  );\n}\n\nDetailPageDrink.propTypes = {\n  api: PropTypes.objectOf(PropTypes.string).isRequired,\n  nameandMeasure: PropTypes.objectOf(PropTypes.string).isRequired,\n  recomendations: PropTypes.objectOf(PropTypes.string).isRequired,\n  url: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default DetailPageDrink;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Container, CircularProgress } from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport DetailPageDrink from '../components/DetailPageDrink';\nimport GlobalContext from '../context/GlobalContext';\nimport Footer from '../components/Footer';\nimport '../css/Recomendations.css';\n\nfunction DrinkPage(props) {\n  const { match: { params: { id } } } = props;\n  const { match: { url } } = props;\n\n  const history = useHistory();\n  const { getLocal, progress, done } = useContext(GlobalContext);\n  console.log('done', done);\n  const [api, saveApi] = useState({});\n  const [recomendations, setRecomendations] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const resolve = await response.json();\n      saveApi(resolve.drinks);\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const responseRec = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const resolveRec = await responseRec.json();\n      setRecomendations(resolveRec);\n      getLocal(id, 'cocktails');\n    })();\n  }, []);\n\n  const nameandMeasures = () => {\n    const ingredientandMeasures = [];\n    const NUMBER_TWEENTY = 20;\n    for (let index = 1; index < NUMBER_TWEENTY; index += 1) {\n      const str = `strIngredient${index}`;\n      const measure = `strMeasure${index}`;\n      if (api[0][str] !== undefined && api[0][str] !== null) {\n        ingredientandMeasures.push(`${api[0][str]} - ${api[0][measure]}`);\n      }\n    }\n    return ingredientandMeasures;\n  };\n\n  const saveLocal = () => {\n    const doneProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (doneProgress !== null) {\n      const localProgress = { ...doneProgress,\n        cocktails:\n         { ...doneProgress.cocktails, [id]: [] } };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(localProgress));\n    }\n    history.push(`/bebidas/${id}/in-progress`);\n  };\n\n  if (loading) return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: '50%',\n      }}\n    >\n      <CircularProgress />\n      <h1>Loading...</h1>\n    </Container>\n);\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n      }}\n    >\n      <DetailPageDrink\n        api={ api[0] }\n        nameandMeasure={ nameandMeasures }\n        recomendations={ recomendations }\n        url={ url }\n      />\n      <div className={ done ? 'hidden' : 'visible' }>\n      <Button\n          onClick={ () => saveLocal() }\n          type=\"button\"\n          variant=\"contained\"\n          color={progress ? \"secondary\" : \"primary\" }\n          endIcon={progress ? <RestoreIcon /> : <PlayCircleFilledIcon /> }\n          sx={{\n            marginTop: 2,\n            marginBottom: 2,\n            zIndex: 1000,\n          }}\n        >\n          { progress\n            ? 'continue recipe'\n            : 'Start Recipe' }\n        </Button>\n      </div>\n      <Footer />\n    </Container>\n  );\n}\n\nDrinkPage.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default DrinkPage;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardMedia,\n  CardHeader,\n  IconButton,\n  Avatar,\n  CardContent,\n  Button,\n  Snackbar,\n  FormGroup,\n  Checkbox,\n  FormControlLabel,\n  CircularProgress,\n  Container,\n} from '@material-ui/core';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport GlobalContext from '../context/GlobalContext';\nimport '../css/recipeProgress.css';\nimport Footer from '../components/Footer';\n\nif (!JSON.parse(localStorage.getItem('inProgressRecipes'))) {\n  localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails: {},\n    meals: {} }));\n}\nif (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n  localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n}\n\nfunction DrinkInProgress({ match: { params: { id } } }) {\n  const { listIngredient, isFavorite, saveFavoriteDrink,\n    setisFavorite } = useContext(GlobalContext);\n  const [api, saveApi] = useState({});\n  const [open, setOpen] = useState(false);\n  const [check, setCheck] = useState({\n    ingredientName: '',\n    checked: '',\n  });\n  const history = useHistory();\n\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const progressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  useEffect(() => {\n    (async () => {\n      setisFavorite(false);\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const resolve = await response.json();\n      saveApi(resolve);\n      const findFav = favoriteRecipes !== null\n      && favoriteRecipes.find((recipeId) => recipeId.id === resolve.drinks[0].idDrink);\n      if (findFav) { setisFavorite(true); }\n      setCheck(listIngredient(resolve, 'drinks')\n        .reduce((acc, curr) => ({ ...acc, [curr]: false }), {}));\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ cocktails: {},\n        meals: { [id]: check } }));\n    })();\n  }, []);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleClick = ({ target }) => {\n    setCheck({ ...check, [target.name]: target.checked });\n    const progressRecipe = { ...progressRecipes,\n      cocktails:\n       { ...progressRecipes.cocktails,\n         [id]: [\n           { ...check, [target.name]: target.checked }] } };\n    if (progressRecipes !== null && target.checked) {\n      console.log(progressRecipes);\n\n      localStorage.setItem('inProgressRecipes', JSON.stringify(progressRecipe));\n    } else {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(progressRecipe));\n    }\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  const drinkProgress = () => (\n    <Card sx={{ maxWidth: '90%', margin: '0 auto'}}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: '#428e92' }} aria-label=\"recipe\">\n            {api.drinks[0].strDrink[0]}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={ () => history.push('/bebidas')}\n          >\n            <LocalBarIcon/>\n          </IconButton>\n        }\n        title={`Category: ${api.drinks[0].strCategory}`}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={ api.drinks[0].strDrinkThumb }\n        alt={ api.drinks[0].strDrink }\n      />\n      <CardContent>\n        <h2 data-testid=\"recipe-title\">{api.drinks[0].strDrink}</h2>\n        <IconButton\n          // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n          // Gary Vernon Grubb\n          onClick={ () => {\n            window.navigator.clipboard.writeText(`http://localhost:3000/bebidas/${api.drinks[0].idDrink}`);\n            setOpen(true);\n          } }\n        >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          type=\"button\"\n          onClick={ () => saveFavoriteDrink(api.drinks[0]) }\n        >\n          { isFavorite ? <Favorite color=\"secondary\"/> : <FavoriteBorder /> }\n        </IconButton>\n        <FormGroup>\n          { listIngredient(api, 'drinks').map((ingredient) => (\n            ingredient !== '' && (\n              <FormControlLabel\n                className={ check[ingredient] === true && 'recipeProgress' }\n                control={\n                  <Checkbox\n                    name={ ingredient }\n                    onClick={ handleClick }\n                  />\n                }\n                label={ ingredient }\n                onClick={ handleClick }\n            />\n            )\n          ))}\n        </FormGroup>\n        <p data-testid=\"instructions\">\n          <h3>Instructions</h3>\n          {api.drinks[0].strInstructions}\n        </p>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          endIcon={ <DoneAllIcon />}\n          onClick={ () => history.push('/receitas-feitas') }\n          disabled={ (() => {\n            const checkvalue = Object.values(check)\n              .some((ingredient) => ingredient === false);\n            return checkvalue;\n          })() }\n        >\n          Finish Recipe\n        </Button>\n      </CardContent>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Link copied\"\n        action={action}\n      />\n      <Footer />\n    </Card>\n  );\n\n  return (\n    <div>\n      { api.drinks !== undefined\n        ? drinkProgress()\n        : (\n            <Container\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginTop: '50%',\n              }}\n            >\n              <CircularProgress />\n              <h1>Loading...</h1>\n            </Container>\n        )\n      }\n    </div>\n  );\n}\n\nDrinkInProgress.propTypes = {\n  match: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default DrinkInProgress;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonGroup, Container, Button } from '@material-ui/core';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction ExploreDrinks() {\n  const history = useHistory();\n  const [surprise, setSurprise] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n      const json = await response.json();\n      setSurprise(json);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explore Drinks\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ButtonGroup orientation=\"vertical\">\n          <Button\n            data-testid=\"explore-by-ingredient\"\n            type=\"button\"\n            onClick={ () => history.push('/explorar/bebidas/ingredientes') }\n          >\n            By ingredients\n          </Button>\n          <Button\n            data-testid=\"explore-surprise\"\n            type=\"button\"\n            onClick={ () => history.push(`/bebidas/${surprise.drinks[0].idDrink}`) }\n          >\n            Surprise me!\n          </Button>\n        </ButtonGroup>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","import React from 'react';\nimport P from 'prop-types';\nimport { Card, CardContent, CardMedia } from '@material-ui/core';\n\nfunction IngredientCardDrink({ index, ingredient }) {\n  return (\n    <Card\n      sx={{\n        maxWidth: '100%',\n      }}\n    >\n      <CardMedia\n        image={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}.png` }\n        alt={ ingredient.strIngredient1 }\n        component=\"img\"\n        height=\"140\"\n      />\n      <CardContent>\n        <h3\n          data-testid={ `${index}-card-name` }\n        >\n          { ingredient.strIngredient1 }\n        </h3>\n      </CardContent>\n    </Card>\n  );\n}\n\nIngredientCardDrink.propTypes = {\n  index: P.number.isRequired,\n  ingredient: P.objectOf(P.any).isRequired,\n};\n\nexport default IngredientCardDrink;\n","import React, { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCardDrink from '../components/IngredientCardDrink';\n\nfunction ExploreIngredientsDrinks() {\n  const [ingredients, setIngredients] = useState();\n  const [loading, setLoading] = useState(true);\n  const MAX_NUMBER = 11;\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      const json = await response.json();\n      setIngredients(json);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explore Ingredients\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n        }}\n      >\n        { !loading && ingredients.drinks.map((ingredient, index) => (\n          index <= MAX_NUMBER && (\n            <IngredientCardDrink\n              key={ index }\n              index={ index }\n              ingredient={ ingredient }\n            />\n          )\n        ))}\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreIngredientsDrinks;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { ButtonGroup, Container, Button } from '@material-ui/core';\n\nfunction Explore() {\n  const history = useHistory();\n\n  return (\n    <div>\n      <Header title=\"Explore\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ButtonGroup\n          sx={{\n            alignSelf: 'center',\n          }}\n        >\n          <Button\n            onClick={ () => history.push('/explorar/comidas') }\n          >\n            Explore Meals\n          </Button>\n          <Button\n            onClick={ () => history.push('/explorar/bebidas') }\n          >\n            Explore Drinks\n          </Button>\n        </ButtonGroup>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction ExploreAreaFood() {\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreAreaFood;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  ButtonGroup,\n  Button,\n  Container,\n  Typography,\n} from '@material-ui/core';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction Perfil() {\n  const history = useHistory();\n\n  const onClick = () => {\n    localStorage.clear();\n    history.push('/');\n  };\n\n  useEffect(() => {\n    if (!localStorage.user) {\n      localStorage.setItem('user', JSON.stringify({ email: 'guest@email.com' }));\n    }\n  }, []);\n\n  const playerEmail = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <>\n      <Header title=\"Profile\" hasBtn={ false } />\n      <Container\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: 5,\n        }}\n      >\n        <Typography variant=\"h5\" data-testid=\"profile-email\">\n          User: { playerEmail !== null && playerEmail.email }\n        </Typography>\n        <ButtonGroup\n          orientation=\"vertical\"\n          sx={{\n            marginTop: 5,\n          }}\n        >\n          <Button\n            onClick={ () => history.push('/receitas-feitas') }\n          >\n            Recipes Done\n          </Button>\n          <Button\n            onClick={ () => history.push('/receitas-favoritas')}\n          >\n            Favorite Recipes\n          </Button>\n          <Button\n            onClick={ onClick }\n          >\n            Logout\n          </Button>\n        </ButtonGroup>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default Perfil;\n","import React, { useState } from 'react';\nimport P from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction RecipesDoneCard({ index, recipe }) {\n  const [shouldRenderMessage, setShouldRenderMessage] = useState(false);\n\n  const {\n    id,\n    type,\n    area,\n    category,\n    alcoholicOrNot,\n    name,\n    image,\n    doneDate,\n    tags,\n  } = recipe;\n\n  const handleClick = async (group, idRef) => {\n    const url = group === 'comida' ? `/comidas/${idRef}` : `/bebidas/${idRef}`;\n    await clipboardCopy(`http://localhost:3000${url}`);\n    setShouldRenderMessage(true);\n  };\n\n  return (\n    <div>\n      <Link\n        to={ type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}` }\n      >\n        <img\n          style={ { width: '150px' } }\n          src={ image }\n          alt={ name }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </Link>\n      <p data-testid={ `${index}-horizontal-top-text` }>\n        { type === 'comida' ? `${area} - ${category}` : alcoholicOrNot}\n      </p>\n      <Link\n        to={ type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}` }\n      >\n        <h3 data-testid={ `${index}-horizontal-name` }>\n          { name }\n        </h3>\n      </Link>\n      <p data-testid={ `${index}-horizontal-done-date` }>\n        { doneDate }\n      </p>\n      <button\n        type=\"button\"\n        onClick={ () => handleClick(type, id) }\n      >\n        <img\n          data-testid={ `${index}-horizontal-share-btn` }\n          src={ shareIcon }\n          alt=\"Share Icon\"\n        />\n      </button>\n      {\n        type === 'comida' && tags.map((tag, indx) => (\n          <p\n            key={ indx }\n            data-testid={ `${index}-${tag}-horizontal-tag` }\n          >\n            { tag }\n          </p>\n        ))\n      }\n      {\n        shouldRenderMessage && 'Link copiado!'\n      }\n    </div>\n  );\n}\n\nRecipesDoneCard.propTypes = {\n  index: P.number.isRequired,\n  recipe: P.objectOf(P.any).isRequired,\n};\n\nexport default RecipesDoneCard;\n","import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport { Container, ButtonGroup, Button } from '@material-ui/core';\nimport RecipesDoneCard from '../components/RecipesDoneCard';\n\nfunction RecipesDone() {\n  const [filter, setFilter] = useState('all');\n\n  const getStorage = () => {\n    const storage = JSON.parse(localStorage.getItem('doneRecipes'));\n    return storage;\n  };\n\n  return (\n    <div>\n      <Header title=\"Recipes Done\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ButtonGroup\n          sx={{\n            alignSelf: 'center',\n          }}\n        >\n          <Button\n            onClick={ () => setFilter('comida') }\n          >\n            Food\n          </Button>\n          <Button\n            onClick={ () => setFilter('bebida') }\n          >\n            Drink\n          </Button>\n          <Button\n            onClick={ () => setFilter('all') }\n          >\n            All\n          </Button>\n        </ButtonGroup>\n      </Container>\n      {getStorage() !== null && getStorage()\n        .filter((favorite) => (filter === 'all' ? favorite : favorite.type === filter))\n        .map((rec, index) => (\n          <RecipesDoneCard key={ index } index={ index } recipe={ rec } />\n        ))}\n    </div>\n  );\n}\n\nexport default RecipesDone;\n","import React, { useState } from 'react';\nimport P from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Favorite from '@material-ui/icons/Favorite';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Card, CardContent, CardMedia, CardActions, IconButton, Snackbar, Button } from '@material-ui/core';\n\nfunction FavoriteCard({ index, favorite, setUpdate }) {\n  const [open, setOpen] = useState(false);\n  const { type, area, category, alcoholicOrNot, name, image, id } = favorite;\n  const horizontalTopText = type === 'comida' ? `${area} - ${category}` : alcoholicOrNot;\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  const handleClickDisFav = (idRef) => {\n    const fromStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const setStorage = fromStorage.filter((ele) => ele.id !== idRef);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(setStorage));\n    setUpdate((s) => !s);\n  };\n\n  return (\n    <Card\n      sx={{\n        marginTop: 3,\n      }}\n    >\n      <Link to={ type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}` }>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image={ image }\n          alt={ name }\n        />\n      </Link>\n      <CardContent>\n        <p data-testid={ `${index}-horizontal-top-text` }>\n          {horizontalTopText}\n        </p>\n        <Link to={ type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}` }>\n          <h3 data-testid={ `${index}-horizontal-name` }>\n            {name}\n          </h3>\n        </Link>\n        <CardActions>\n          <IconButton\n            // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n            // Gary Vernon Grubb\n            onClick={ () => {\n              window.navigator.clipboard\n                .writeText(`http://localhost:3000${type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}`}`);\n              setOpen(true);\n            } }\n          >\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={ () => handleClickDisFav(id) }\n          >\n            <Favorite color=\"secondary\"/>\n          </IconButton>\n        </CardActions>\n      </CardContent>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Link copied\"\n        action={action}\n      />\n    </Card>\n  );\n}\n\nFavoriteCard.propTypes = {\n  index: P.number.isRequired,\n  favorite: P.objectOf(P.any).isRequired,\n  setUpdate: P.func.isRequired,\n};\n\nexport default FavoriteCard;\n","import React, { useEffect, useState } from 'react';\nimport { Container, ButtonGroup, Button } from '@material-ui/core';\nimport FavoriteCard from '../components/FavoriteCard';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction FavoritesRecipes() {\n  const [shouldUpdate, setShouldUpdateFavorite] = useState(false);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {}, [shouldUpdate]);\n\n  const getStorage = () => {\n    const storage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    return storage;\n  };\n\n  return (\n    <div>\n      <Header title=\"Favorite Recipes\" hasBtn={ false } />\n      <Container\n        sx={{\n          marginTop: 3,\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ButtonGroup\n          sx={{\n            alignSelf: 'center',\n          }}\n        >\n          <Button\n            onClick={ () => setFilter('comida') }\n          >\n            Food\n          </Button>\n          <Button\n            onClick={ () => setFilter('bebida') }\n          >\n            Drink\n          </Button>\n          <Button\n            onClick={ () => setFilter('all') }\n          >\n            All\n          </Button>\n        </ButtonGroup>\n        { getStorage() !== null && getStorage()\n          .filter((favorite) => (filter === 'all' ? favorite : favorite.type === filter))\n          .map((favorite, index) => (\n            <FavoriteCard\n              setUpdate={ setShouldUpdateFavorite }\n              key={ index }\n              index={ index }\n              favorite={ favorite }\n            />\n          ))}\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FavoritesRecipes;\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from '../pages/Login';\r\nimport FoodsPage from '../pages/FoodsPage';\r\nimport FoodPage from '../pages/FoodPage';\r\nimport FoodInProgress from '../pages/FoodInProgress';\r\nimport ExploreIngredientsFoods from '../pages/ExploreIngredientsFoods';\r\nimport ExploreFoods from '../pages/ExploreFoods';\r\nimport DrinksPage from '../pages/DrinksPage';\r\nimport DrinkPage from '../pages/DrinkPage';\r\nimport DrinkInProgress from '../pages/DrinkInProgress';\r\nimport ExploreDrinks from '../pages/ExploreDrinks';\r\nimport ExploreIngredientsDrinks from '../pages/ExploreIngredientsDrinks';\r\nimport Explore from '../pages/Explore';\r\nimport ExploreAreaFood from '../pages/ExploreAreaFood';\r\nimport Perfil from '../pages/Perfil';\r\nimport RecipesDone from '../pages/RecipesDone';\r\nimport FavoritesRecipes from '../pages/FavoritesRecipes';\r\n\r\nfunction Switcher() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={ Login } />\r\n      <Route exact path=\"/comidas\" component={ FoodsPage } />\r\n      <Route\r\n        exact\r\n        path=\"/comidas/:id\"\r\n        render={ ({ match }) => <FoodPage match={ match } /> }\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/comidas/:id/in-progress\"\r\n        render={ ({ match }) => <FoodInProgress match={ match } /> }\r\n      />\r\n      <Route exact path=\"/bebidas\" component={ DrinksPage } />\r\n      <Route\r\n        exact\r\n        path=\"/bebidas/:id\"\r\n        render={ ({ match }) => <DrinkPage match={ match } /> }\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/bebidas/:id/in-progress\"\r\n        render={ ({ match }) => <DrinkInProgress match={ match } /> }\r\n      />\r\n      <Route exact path=\"/explorar\" component={ Explore } />\r\n      <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\r\n      <Route\r\n        exact\r\n        path=\"/explorar/comidas/ingredientes\"\r\n        component={ ExploreIngredientsFoods }\r\n      />\r\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\r\n      <Route\r\n        exact\r\n        path=\"/explorar/bebidas/ingredientes\"\r\n        component={ ExploreIngredientsDrinks }\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/explorar/comidas/area\"\r\n        component={ ExploreAreaFood }\r\n      />\r\n      <Route exact path=\"/perfil\" component={ Perfil } />\r\n      <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\r\n      <Route exact path=\"/receitas-favoritas\" component={ FavoritesRecipes } />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Switcher;\r\n","import React, { useState } from 'react';\nimport P from 'prop-types';\nimport GlobalContext from './GlobalContext';\n\nfunction GlobalProvider({ children }) {\n  const [done, setDone] = useState(false);\n  const [progress, setprogress] = useState(false);\n  const [stateEmail, setStateEmail] = useState('guest');\n  const [drinks, setDrinks] = useState([]);\n  const [categoryMeals, setCategoryMeals] = useState([]);\n  const [categoryDrinks, setCategoryDrinks] = useState([]);\n  const [meals, setMeals] = useState([]);\n  const [filtredDrinks, setFiltredDrinks] = useState([]);\n  const [filtredMeals, setFiltredMeals] = useState([]);\n  const [filtredMealsByCategory, setFiltredMealsByCategory] = useState([]);\n  const [filtredDrinksByCategory, setFiltredDrinksByCategory] = useState([]);\n  const [showBar, setShowBar] = useState(false);\n  const [isFavorite, setisFavorite] = useState(false);\n\n  const fetchRecipes = async (param) => {\n    const response = await fetch(`https://www.${param}.com/api/json/v1/1/search.php?s=`);\n    const resFilters = await fetch(`https://www.${param}.com/api/json/v1/1/list.php?c=list`);\n    const json = await response.json();\n    const jsonFilters = await resFilters.json();\n    if (param === 'themealdb') {\n      setMeals(json);\n      setCategoryMeals(jsonFilters);\n      setFiltredMeals(json);\n    }\n    if (param === 'thecocktaildb') {\n      setDrinks(json);\n      setCategoryDrinks(jsonFilters);\n      setFiltredDrinks(json);\n    }\n  };\n\n  const getLocal = (id, type) => {\n    setDone(false);\n    setprogress(false);\n    const doneLocal = JSON.parse(localStorage.getItem('doneRecipes'));\n    const doneProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (doneLocal !== null) {\n      const findDone = doneLocal.find((recipeId) => recipeId.id === id);\n      if (findDone) { setDone(true); }\n    }\n    if (doneProgress !== null) {\n      const findinProgress = doneProgress !== null ? doneProgress[type][id] : null;\n      if (findinProgress !== undefined) { setprogress(true); }\n    }\n  };\n\n  const listIngredient = (api, type) => {\n    const ingredientsList = [];\n    const NUMBER_TWEENTY = 20;\n    if (api[type] !== undefined) {\n      for (let index = 1; index < NUMBER_TWEENTY; index += 1) {\n        const str = `strIngredient${index}`;\n\n        if (api[type][0][str] !== ''\n        && api[type][0][str] !== null && api[type][0][str] !== undefined) {\n          ingredientsList\n            .push(api[type][0][str]);\n        }\n      }\n    }\n    return ingredientsList;\n  };\n\n  const saveFavoriteMeal = (api) => {\n    if (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!isFavorite) {\n      const fav = [...favoriteRecipes, {\n        id: api.idMeal,\n        type: 'comida',\n        area: api.strArea,\n        category: api.strCategory,\n        alcoholicOrNot: '',\n        name: api.strMeal,\n        image: api.strMealThumb,\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n      setisFavorite(true);\n    } else {\n      const filtredFav = favoriteRecipes\n        .filter((favRecipe) => favRecipe.id !== api.idMeal);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filtredFav));\n      setisFavorite(false);\n    }\n  };\n\n  const saveFavoriteDrink = (api) => {\n    if (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!isFavorite) {\n      const fav = [...favoriteRecipes, {\n        id: api.idDrink,\n        type: 'bebida',\n        area: '',\n        category: api.strCategory,\n        alcoholicOrNot: api.strAlcoholic,\n        name: api.strDrink,\n        image: api.strDrinkThumb,\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n      setisFavorite(true);\n    } else {\n      const filtredFav = favoriteRecipes\n        .filter((favRecipe) => favRecipe.id !== api.idDrink);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filtredFav));\n      setisFavorite(false);\n    }\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={ {\n        meals,\n        drinks,\n        categoryDrinks,\n        categoryMeals,\n        fetchRecipes,\n        getLocal,\n        done,\n        progress,\n        stateEmail,\n        setStateEmail,\n        setFiltredDrinks,\n        setFiltredMeals,\n        filtredDrinks,\n        filtredMeals,\n        setDrinks,\n        setMeals,\n        showBar,\n        setShowBar,\n        filtredMealsByCategory,\n        setFiltredMealsByCategory,\n        setFiltredDrinksByCategory,\n        filtredDrinksByCategory,\n        listIngredient,\n        isFavorite,\n        saveFavoriteMeal,\n        saveFavoriteDrink,\n        setisFavorite } }\n    >\n      { children }\n    </GlobalContext.Provider>\n  );\n}\n\nGlobalProvider.propTypes = {\n  children: P.node.isRequired,\n};\n\nexport default GlobalProvider;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport Switcher from './helpers/Switcher';\nimport GlobalProvider from './context/GlobalProvider';\n\nconst theme = createTheme({\n  palette: {\n    secondary: {\n      main: '#ff8f00',\n      light: '#ffc046',\n      dark: '#c56000',\n    },\n    primary: {\n      main: '#006064',\n      light: '#428e92',\n      dark: '#00363a',\n    },\n    background: {\n      default: '#00363a',\n    },\n}});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={ theme }>\n      <GlobalProvider>\n        <BrowserRouter basename=\"/recipes-app\">\n          <Switcher />\n        </BrowserRouter>\n      </GlobalProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createContext } from 'react';\n\nconst GlobalContext = createContext();\n\nexport default GlobalContext;\n","import React, { useContext, useState } from 'react';\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Button,\n  Container,\n  TextField,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport GlobalContext from '../context/GlobalContext';\n\nfunction SearchBar() {\n  const { setMeals, setDrinks } = useContext(GlobalContext);\n  const [search, setSearch] = useState('');\n  const [option, setOption] = useState('');\n  const history = useHistory();\n\n  const { location: { pathname } } = history;\n\n  const trow = (json, type, path, id) => {\n    if (json[type] === null) {\n      return global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    }\n    if (json[type].length === 1) { history.push(`${path}/${json[type][0][id]}`); }\n    if (path === '/comidas' && json[type].length > 1) { setMeals(json); }\n    if (path === '/bebidas' && json[type].length > 1) { setDrinks(json); }\n  };\n\n  const requestSwitch = async (path, opt, src) => {\n    const pathName = path === '/comidas' ? 'themealdb' : 'thecocktaildb';\n    const type = path === '/comidas' ? 'meals' : 'drinks';\n    const id = path === '/comidas' ? 'idMeal' : 'idDrink';\n    switch (opt) {\n    case 'ingredient': {\n      const response = await fetch(`https://www.${pathName}.com/api/json/v1/1/filter.php?i=${src}`);\n      const json = await response.json();\n      trow(json, type, path, id);\n      break;\n    }\n    case 'name': {\n      const response = await fetch(`https://www.${pathName}.com/api/json/v1/1/search.php?s=${src}`);\n      const json = await response.json();\n      trow(json, type, path, id);\n      break;\n    }\n    case 'initialLetter': {\n      if (src.length > 1) global.alert('Sua busca deve conter somente 1 (um) caracter');\n      const response = await fetch(`https://www.${pathName}.com/api/json/v1/1/search.php?f=${src}`);\n      const json = await response.json();\n      trow(json, type, path, id);\n      break;\n    }\n    default:\n      break;\n    }\n  };\n\n  return (\n    <Container sx={ {\n      marginBottom: 2,\n      maxWidth: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      } }\n    >\n      <FormControl\n        component=\"form\"\n      >\n        <RadioGroup\n          aria-label=\"gender\"\n          defaultValue=\"female\"\n          name=\"radio-buttons-group\"\n          row\n        >\n          <FormControlLabel\n            value=\"ingredient\"\n            control={ <Radio /> }\n            label=\"Ingredient\"\n            onChange={ ({ target }) => setOption(target.value) }\n          />\n          <FormControlLabel\n            value=\"name\"\n            control={ <Radio /> }\n            label=\"Name\"\n            onChange={ ({ target }) => setOption(target.value) }\n          />\n          <FormControlLabel\n            value=\"initialLetter\"\n            control={ <Radio /> }\n            label=\"First Letter\"\n            onChange={ ({ target }) => setOption(target.value) }\n          />\n        </RadioGroup>\n        <TextField\n          value={ search }\n          variant=\"outlined\"\n          label=\"Ingredient, name or first letter...\"\n          onChange={ ({ target }) => setSearch(target.value) }\n        />\n        <Button\n          variant=\"contained\"\n          onClick={ () => requestSwitch(pathname, option, search) }\n        >\n          Search\n        </Button>\n      </FormControl>\n    </Container>);\n}\n\nexport default SearchBar;\n"],"sourceRoot":""}